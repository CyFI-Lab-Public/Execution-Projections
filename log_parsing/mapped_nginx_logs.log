FORMAT STRINGSS : {647194: ('dlopen() "%s" failed (%s)', 'ngx_load_module', 99078), 647266: ('module: %s i:%ui', 'ngx_load_module', 99053), 647283: ('dlclose() failed (%s)', 'ngx_unload_module', 99417), 647352: ('getpwnam("%s") failed', 'ngx_set_user', 100685), 647374: ('getgrnam("%s") failed', 'ngx_set_user', 100727), 647551: ('invalid option: "%s"', 'main', 102235), 647589: ('invalid option: "-s %s"', 'main', 103235), 647613: ('invalid option: "%c"', 'main', 103276), 647748: ('%ud;', 'ngx_exec_new_binary', 106590), 647753: ('env: %s', 'ngx_exec_new_binary', 106709), 647976: ('dlsym() "%V", "%s" failed (%s)', 'ngx_load_module', 99141), 648072: ('"worker_cpu_affinity" supports up to %d CPUs only', 'ngx_set_cpu_affinity', 100032), 648128: ('invalid character "%c" in "worker_cpu_affinity"', 'ngx_set_cpu_affinity', 100148), 649688: ('using inherited sockets from "%s"', 'main', 103967), 649728: ('invalid socket number "%s" in NGINX environment variable, ignoring the rest of the variable', 'main', 104013), 649824: ('invalid socket number "%s" in NGINX environment variable, ignoring', 'main', 104327), 649896: ('configuration file %s test failed', 'main', 104386), 649936: ('configuration file %s test is successful', 'main', 104490), 650288: ('rename() %s to %s failed before executing new binary process "%s"', 'ngx_exec_new_binary', 106968), 650360: ('rename() %s back to %s failed after an attempt to execute new binary process "%s"', 'ngx_exec_new_binary', 107078), 650716: (' (%d: ', 'ngx_log_errno', 107694), 650723: ('%P#%d: ', 'ngx_log_error_core', 107993), 650731: ('*%uA ', 'ngx_log_error_core', 108190), 650737: ('nginx: [%V] ', 'ngx_log_error_core', 108341), 650811: ('invalid buffer size "%V"', 'ngx_log_set_log', 110558), 650836: ('MEMLOG %uz %V:%ui%N', 'ngx_log_set_log', 110452), 650864: ('duplicate log level "%V"', 'ngx_log_set_log', 110853), 650889: ('invalid log level "%V"', 'ngx_log_set_log', 110921), 651048: ('[alert] could not open error log file: open() "%s" failed', 'ngx_log_init', 109315), 651106: ('file cleanup: fd:%d', 'ngx_pool_cleanup_file', 111374), 651126: ('close() "%s" failed', 'ngx_pool_cleanup_file', 111423), 651146: ('run cleanup: %p', 'ngx_destroy_pool', 111785), 651162: ('free: %p, unused: %uz', 'ngx_destroy_pool', 111926), 651184: ('add cleanup: %p', 'ngx_pool_cleanup_add', 112712), 651200: ('file cleanup: fd:%d %s', 'ngx_pool_delete_file', 112862), 651223: ('unlink() "%s" failed', 'ngx_pool_delete_file', 112917), 651248: ('could not build %s, you should increase %s_max_size: %i', 'ngx_hash_init', 114553), 651304: ('could not build %s, too large %s_bucket_size: %i', 'ngx_hash_init', 114633), 651360: ('could not build %s, you should increase %s_bucket_size: %i', 'ngx_hash_init', 114760), 651424: ('could not build optimal %s, you should increase either %s_max_size: %i or %s_bucket_size: %i; ignoring %s_bucket_size', 'ngx_hash_init', 115044), 651544: ('zero size buf in output t:%d r:%d f:%d %p %p-%p %p %O-%O', 'ngx_output_chain', 120733), 651608: ('negative size buf in output t:%d r:%d f:%d %p %p-%p %p %O-%O', 'ngx_output_chain', 121076), 651672: ('pread() read only %z of %O from "%s"', 'ngx_output_chain', 122293), 651712: ('zero size buf in chain writer t:%d r:%d f:%d %p %p-%p %p %O-%O', 'ngx_chain_writer', 122611), 651776: ('negative size buf in chain writer t:%d r:%d f:%d %p %p-%p %p %O-%O', 'ngx_chain_writer', 123024), 651843: ('fcntl(!O_DIRECT) "%s" failed', 'ngx_output_chain', 122108), 651872: ('fcntl(O_DIRECT) "%s" failed', 'ngx_output_chain', 122217), 651900: ('chain writer buf fl:%d s:%uO', 'ngx_chain_writer', 122604), 651929: ('chain writer in: %p', 'ngx_chain_writer', 123139), 651949: ('chain writer out: %p', 'ngx_chain_writer', 123726), 651970: ('post event %p', 'ngx_chain_writer', 123758), 651984: ('update posted event %p', 'ngx_chain_writer', 123803), 652992: ('%ud.%ud.%ud.%ud', 'ngx_inet6_ntop', 137202), 653008: ('%ud.%ud.%ud.%ud:%d', 'ngx_sock_ntop', 137317), 653027: (']:%d', 'ngx_sock_ntop', 137445), 653032: ('unix:%Z', 'ngx_sock_ntop', 137475), 653040: ('unix:%*s%Z', 'ngx_sock_ntop', 137534), 653232: ('temp file: "%s"', 'ngx_create_path', 142731), 653248: ('mkdir() "%s" failed', 'ngx_create_path', 142879), 653268: ('hashed path: %s', 'ngx_create_temp_file', 143371), 653284: ('temp fd:%d', 'ngx_create_temp_file', 143550), 653295: ('open() "%s" failed', 'ngx_create_temp_file', 143707), 653314: ('%s %V', 'ngx_write_chain_to_temp_file', 143908), 653341: ('invalid value "%V"', 'ngx_conf_set_access_slot', 144279), 653360: ('chown("%s", %d) failed', 'ngx_create_paths', 145695), 653383: ('chmod() "%s" failed', 'ngx_create_paths', 145896), 653403: ('fstat() "%s" failed', 'ngx_copy_file', 146563), 653423: ('utimes() "%s" failed', 'ngx_copy_file', 146979), 653444: ('%*s.%010uD%Z', 'ngx_ext_rename_file', 147825), 653457: ('rename() "%s" to "%s" failed', 'ngx_ext_rename_file', 148015), 653486: ('walk tree "%V"', 'ngx_walk_tree', 148331), 653501: ('opendir() "%s" failed', 'ngx_walk_tree', 148379), 653523: ('readdir() "%s" failed', 'ngx_walk_tree', 148506), 653545: ('tree name %uz:"%s"', 'ngx_walk_tree', 148539), 653564: ('tree path "%s"', 'ngx_walk_tree', 148630), 653579: ('tree file "%s"', 'ngx_walk_tree', 149177), 653594: ('tree enter dir "%s"', 'ngx_walk_tree', 149387), 653614: ('tree skip dir "%s"', 'ngx_walk_tree', 149437), 653633: ('tree special "%s"', 'ngx_walk_tree', 149474), 653651: ('closedir() "%s" failed', 'ngx_walk_tree', 149658), 653680: ('the same path name "%V" used in %s:%ui and', 'ngx_add_path', 144409), 653728: ('the default path name "%V" has the same name as another default path, but the different levels, you need to redefine one of them in http section', 'ngx_add_path', 144585), 653880: ('the path name "%V" in %s:%ui has the same name as default path, but the different levels, you need to define default path in http section', 'ngx_add_path', 144513), 654024: ('the same path name "%V" in %s:%ui has the different levels than', 'ngx_add_path', 144638), 654088: ('read() has read only %z of %O from %s', 'ngx_copy_file', 146760), 654128: ('write() has written only %z of %O to %s', 'ngx_copy_file', 146907), 654168: ('%s%s', 'ngx_slab_error', 160930), 654173: ('slab alloc: %uz', 'ngx_slab_alloc_locked', 162239), 654189: ('slab alloc: %uz slot: %ui', 'ngx_slab_alloc_locked', 162306), 654215: ('slab alloc: %p', 'ngx_slab_alloc_locked', 163391), 654230: ('slab free: %p', 'ngx_slab_free_locked', 163890), 654520: ('%s, %02d %s %4d %02d:%02d:%02d GMT', 'ngx_time_update', 165749), 654560: ('%02d/%s/%d:%02d:%02d:%02d %c%02i%02i', 'ngx_time_update', 166086), 654600: ('%4d-%02d-%02dT%02d:%02d:%02d%c%02i:%02i', 'ngx_time_update', 166303), 654640: ('%s, %02d-%s-%02d %02d:%02d:%02d GMT', 'ngx_http_cookie_time', 167397), 654680: ('%s, %02d-%s-%d %02d:%02d:%02d GMT', 'ngx_http_cookie_time', 167497), 654714: ('%4d/%02d/%02d %02d:%02d:%02d', 'ngx_time_update', 165882), 654743: ('%s %2d %02d:%02d:%02d', 'ngx_time_update', 166387), 654841: ('shmtx wake %uA', 'ngx_shmtx_wakeup', 167804), 654906: ('shmtx wait %uA', 'ngx_shmtx_lock', 168559), 655056: ('getsockname() of the inherited socket #%d failed', 'ngx_set_inherited_sockets', 169548), 655112: ('the inherited socket #%d has an unsupported protocol family', 'ngx_set_inherited_sockets', 169586), 655176: ('getsockopt(SO_RCVBUF) %V failed, ignored', 'ngx_set_inherited_sockets', 170215), 655224: ('getsockopt(SO_SNDBUF) %V failed, ignored', 'ngx_set_inherited_sockets', 170275), 655272: ('getsockopt(SO_REUSEPORT) %V failed, ignored', 'ngx_set_inherited_sockets', 170327), 655320: ('getsockopt(TCP_FASTOPEN) %V failed, ignored', 'ngx_set_inherited_sockets', 170540), 655368: ('getsockopt(TCP_DEFER_ACCEPT) for %V failed, ignored', 'ngx_set_inherited_sockets', 170598), 655424: ('setsockopt(SO_REUSEPORT) %V failed, ignored', 'ngx_open_listening_sockets', 170880), 655472: ('setsockopt(SO_REUSEADDR) %V failed', 'ngx_open_listening_sockets', 171112), 655512: ('setsockopt(SO_REUSEPORT) %V failed', 'ngx_open_listening_sockets', 171152), 655552: ('setsockopt(IPV6_V6ONLY) %V failed, ignored', 'ngx_open_listening_sockets', 171702), 655600: ('listen() to %V, backlog %d failed', 'ngx_open_listening_sockets', 172492), 655672: ('setsockopt(SO_RCVBUF, %d) %V failed, ignored', 'ngx_configure_listening_sockets', 172894), 655720: ('setsockopt(SO_SNDBUF, %d) %V failed, ignored', 'ngx_configure_listening_sockets', 172989), 655768: ('setsockopt(SO_KEEPALIVE, %d) %V failed, ignored', 'ngx_configure_listening_sockets', 173098), 655816: ('setsockopt(TCP_KEEPIDLE, %d) %V failed, ignored', 'ngx_configure_listening_sockets', 173199), 655864: ('setsockopt(TCP_KEEPINTVL, %d) %V failed, ignored', 'ngx_configure_listening_sockets', 173300), 655920: ('setsockopt(TCP_KEEPCNT, %d) %V failed, ignored', 'ngx_configure_listening_sockets', 173395), 655968: ('setsockopt(TCP_FASTOPEN, %d) %V failed, ignored', 'ngx_configure_listening_sockets', 173496), 656016: ('listen() to %V, backlog %d failed, ignored', 'ngx_configure_listening_sockets', 173574), 656064: ('setsockopt(TCP_DEFER_ACCEPT, %d) for %V failed, ignored', 'ngx_configure_listening_sockets', 174054), 656120: ('setsockopt(IP_PKTINFO) for %V failed, ignored', 'ngx_configure_listening_sockets', 174176), 656168: ('setsockopt(IPV6_RECVPKTINFO) for %V failed, ignored', 'ngx_configure_listening_sockets', 174009), 656224: ('the new socket has number %d, but only %ui files are available', 'ngx_get_connection', 174462), 656288: ('%ui worker_connections are not enough, reusing connections', 'ngx_get_connection', 174494), 656352: ('%ui worker_connections are not enough', 'ngx_get_connection', 175040), 656423: ('getsockopt(SO_TYPE) %V failed', 'ngx_set_inherited_sockets', 170155), 656453: ('socket() %V failed', 'ngx_open_listening_sockets', 170971), 656472: ('close() socket %V failed', 'ngx_open_listening_sockets', 171062), 656497: ('ioctl(FIONBIO) %V failed', 'ngx_open_listening_sockets', 171864), 656522: ('bind() %V #%d ', 'ngx_open_listening_sockets', 171904), 656537: ('bind() to %V failed', 'ngx_open_listening_sockets', 172060), 656557: ('unlink() %s failed', 'ngx_open_listening_sockets', 172237), 656643: ('close listening %V #%d ', 'ngx_close_listening_sockets', 175432), 656667: ('reusable connection: %ui', 'ngx_reusable_connection', 175907), 656718: ('event timer del: %d: %M', 'ngx_close_connection', 176236), 656742: ('delete posted event %p', 'ngx_close_connection', 176501), 656765: ('close() socket %d failed', 'ngx_close_connection', 176696), 656811: ('*%uA shutdown timeout', 'ngx_shutdown_timer_handler', 177593), 656850: ('live fd:%ui', 'ngx_clean_old_cycles', 178047), 656862: ('clean old cycle: %ui', 'ngx_clean_old_cycles', 178090), 656883: ('old cycles status: %ui', 'ngx_clean_old_cycles', 177900), 656906: ('event timer add: %d: %M:%M', 'ngx_clean_old_cycles', 178395), 656933: ('%P%N', 'ngx_create_pidfile', 178807), 656959: ('log: %p %d "%s"', 'ngx_init_cycle', 181545), 656975: ('fcntl(FD_CLOEXEC) "%s" failed', 'ngx_init_cycle', 181675), 657005: ('deleting socket %s', 'ngx_init_cycle', 183212), 657048: ('event timer: %d, old: %M, new: %M', 'ngx_clean_old_cycles', 178215), 657088: ('the configuration file %s syntax is ok', 'ngx_init_cycle', 181133), 657128: ('zero size shared memory zone "%V"', 'ngx_init_cycle', 181922), 657168: ('shared zone "%V" has no equal addresses: %p vs %p', 'ngx_init_cycle', 182204), 657224: ('close() socket listening socket on %V failed', 'ngx_init_cycle', 183179), 657304: ('invalid PID number "%*s" in "%s"', 'ngx_signal_process', 185104), 657344: ('reopen file "%s", old:%d new:%d', 'ngx_reopen_files', 185231), 657376: ('the shared memory zone "%V" is already declared for a different use', 'ngx_shared_memory_add', 186316), 657448: ('the size %uz of shared memory zone "%V" conflicts with already declared size %uz', 'ngx_shared_memory_add', 186395), 657567: ('%*s in command line', 'ngx_conf_log_error', 188644), 657587: ('%*s in %s:%ui', 'ngx_conf_log_error', 188694), 657601: ('unexpected "%c"', 'ngx_conf_parse', 190527), 657647: ('"%s" directive %s', 'ngx_conf_parse', 192229), 657665: ('unknown directive "%s"', 'ngx_conf_parse', 192395), 657688: ('close() %s failed', 'ngx_conf_parse', 192485), 657706: ('include %s', 'ngx_conf_include', 193366), 657721: ('glob() "%s" failed', 'ngx_conf_include', 193392), 657744: ('invalid value "%s"', 'ngx_conf_set_enum_slot', 194909), 657763: ('duplicate value "%s"', 'ngx_conf_set_bitmask_slot', 195179), 657888: ('too long parameter "%*s..." started', 'ngx_conf_parse', 190329), 657928: ('too long parameter, probably missing terminating "%c" character', 'ngx_conf_parse', 190283), 657992: ('pread() returned only %z bytes instead of %z', 'ngx_conf_parse', 190400), 658128: ('directive "%s" is not terminated by ";"', 'ngx_conf_parse', 191723), 658168: ('directive "%s" has no opening "{"', 'ngx_conf_parse', 191761), 658208: ('"%s" directive is not allowed here', 'ngx_conf_parse', 192354), 658248: ('invalid number of arguments in "%s" directive', 'ngx_conf_parse', 191802), 658296: ('invalid value "%s" in "%s" directive, it must be "on" or "off"', 'ngx_conf_set_flag_slot', 193845), 658360: ('the "%s" directive is deprecated, use the "%s" directive instead', 'ngx_conf_deprecated', 195307), 658432: ('value must be equal to or greater than %i', 'ngx_conf_check_num_bounds', 195443), 658480: ('value must be between %i and %i', 'ngx_conf_check_num_bounds', 195387), 658744: ('module "%s" is already loaded', 'ngx_add_module', 196608), 658774: ('module: %s before %s:%i', 'ngx_add_module', 196950), 658800: ('module "%V" version %ui instead of %ui', 'ngx_add_module', 196520), 658840: ('module "%V" is not binary compatible', 'ngx_add_module', 196566), 658877: (' while %s', 'ngx_resolver_log_error', 197319), 658887: (', resolver: %V', 'ngx_resolver_log_error', 197371), 658930: ('UDP socket %d', 'ngx_resolver_send_udp_query', 198822), 659004: ('connect to %V, fd:%d #%uA', 'ngx_resolver_send_udp_query', 199033), 659081: ('resolver expire "%*s"', 'ngx_resolver_expire', 200649), 659103: ('TCP socket %d', 'ngx_resolver_send_tcp_query', 201515), 659117: ('connect() to %V failed', 'ngx_resolver_send_tcp_query', 201947), 659150: ('connect(): %d', 'ngx_resolver_send_tcp_query', 202014), 659203: ('resolver resend "%*s" %p', 'ngx_resolver_resend', 202893), 659276: ('invalid parameter: %V', 'ngx_resolver_create', 205869), 659310: ('%s in resolver "%V"', 'ngx_resolver_create', 206400), 659354: ('resolve: "%V"', 'ngx_resolve_name', 207031), 659368: ('%V.%V', 'ngx_resolve_name', 207087), 659374: ('_%V._tcp.%V', 'ngx_resolve_name', 206921), 659401: ('resolve: "%V" SRV %i', 'ngx_resolve_name_locked', 209345), 659422: ('resolve: "%V" A %i', 'ngx_resolve_name_locked', 210152), 659441: ('resolve: "%V" AAAA %i', 'ngx_resolve_name_locked', 210350), 659463: ('resolve name done: %i', 'ngx_resolve_name_done', 211040), 659485: ('could not cancel %V resolving', 'ngx_resolve_name_done', 211483), 659520: ('%xd', 'ngx_inet6_ntop', 137069), 659524: ('resolve addr done: %i', 'ngx_resolve_addr_done', 214923), 659662: ('resolver qs:%V', 'ngx_resolver_process_response', 217297), 659677: ('resolver cname:"%V"', 'ngx_resolver_process_response', 219779), 659777: ('resolver an:%V', 'ngx_resolver_process_response', 223295), 660296: ('resolver DNS response %ui fl:%04Xi %ui/%ui/%ud/%ud', 'ngx_resolver_process_response', 215625), 660352: ('invalid %s DNS response %ui fl:%04Xi', 'ngx_resolver_process_response', 215715), 660392: ('resolver DNS response qt:%ui cl:%ui', 'ngx_resolver_process_response', 216219), 660432: ('unknown query class %ui in DNS response', 'ngx_resolver_process_response', 216186), 660472: ('unexpected DNS response for %V', 'ngx_resolver_process_response', 217370), 660504: ('wrong ident %ui in DNS response for %V, expect %ui', 'ngx_resolver_process_response', 217646), 660560: ('unexpected RR class %ui in DNS response', 'ngx_resolver_process_response', 218591), 660600: ('unexpected RR type %ui in DNS response', 'ngx_resolver_process_response', 218823), 660640: ('resolver naddrs:%ui cname:%p ttl:%uD', 'ngx_resolver_process_response', 218945), 660720: ('resolver nsrvs:%ui cname:%p ttl:%uD', 'ngx_resolver_process_response', 221089), 660816: ('resolver qt:%ui cl:%ui len:%uz', 'ngx_resolver_process_response', 223149), 660848: ('unknown query type %ui in DNS response', 'ngx_resolver_process_response', 223465), 660888: ('DNS error (%ui: %s), query id:%ui, name:"%*s"', 'ngx_resolver_process_response', 216023), 660936: ('DNS error (%ui: %s), query id:%ui', 'ngx_resolver_process_response', 223652), 660976: ('close cached open file: %s, fd:%d, c:%d, u:%d, %d', 'ngx_close_cached_file', 225341), 661032: ('%ui items still left in open file cache', 'ngx_open_file_cache_cleanup', 225819), 661192: ('posix_fadvise(POSIX_FADV_SEQUENTIAL) "%V" failed', 'ngx_open_and_stat_file', 228761), 661248: ('retest open file: %s, fd:%d, c:%d, e:%d', 'ngx_open_cached_file', 230383), 661288: ('cached open file: %s, fd:%d, c:%d, e:%d, u:%d', 'ngx_open_cached_file', 230752), 661358: ('delete cached open file: %s', 'ngx_open_file_cache_cleanup', 225505), 661386: ('expire cached open file: %s', 'ngx_expire_old_cached_files', 225945), 661430: ('close() "%V" failed', 'ngx_open_file_wrapper', 227586), 661460: ('fstat() "%V" failed', 'ngx_open_and_stat_file', 228585), 661480: ('fcntl(O_DIRECT) "%V" failed', 'ngx_open_and_stat_file', 228834), 661608: ('PROXY protocol v2 lookup tlv:%02xi', 'ngx_proxy_protocol_lookup_tlv', 234040), 661648: ('unknown PROXY protocol version: %ui', 'ngx_proxy_protocol_read', 234787), 661688: ('PROXY protocol v2 unsupported command %ui', 'ngx_proxy_protocol_read', 234735), 661736: ('PROXY protocol v2 unsupported transport %ui', 'ngx_proxy_protocol_read', 234899), 661784: ('PROXY protocol v2 unsupported address family %ui', 'ngx_proxy_protocol_read', 234999), 661840: ('PROXY protocol v2 src: %V %d, dst: %V %d', 'ngx_proxy_protocol_read', 235418), 661920: ('PROXY protocol src: %V %d, dst: %V %d', 'ngx_proxy_protocol_read', 235962), 662000: ('PROXY protocol v2 get tlv "%V"', 'ngx_proxy_protocol_get_tlv', 236650), 662032: ('invalid PROXY protocol TLV "%V"', 'ngx_proxy_protocol_get_tlv', 237029), 662064: ('unknown PROXY protocol TLV "%V"', 'ngx_proxy_protocol_get_tlv', 237126), 662157: ('broken header: "%*s"', 'ngx_proxy_protocol_read', 236046), 662178: (' %ui %ui\r\n', 'ngx_proxy_protocol_write', 236385), 662277: (', server: %V', 'ngx_syslog_log_error', 237360), 662329: ('%s in syslog server "%V"', 'ngx_syslog_process_conf', 237535), 662392: ('unknown syslog facility "%s"', 'ngx_syslog_process_conf', 237955), 662459: ('unknown syslog severity "%s"', 'ngx_syslog_process_conf', 238132), 662556: ('unknown syslog parameter "%s"', 'ngx_syslog_process_conf', 238409), 662619: ('<%ui>%V %V: ', 'ngx_syslog_add_header', 238774), 662632: ('<%ui>%V %V %V: ', 'ngx_syslog_add_header', 238741), 662861: ('using the "%s" event method', 'ngx_event_module_init', 240810), 662907: ('counter: %p, %uA', 'ngx_event_module_init', 241163), 662924: ('invalid event type "%V"', 'ngx_event_use', 241499), 662948: ('invalid number "%V"', 'ngx_event_connections', 241643), 663036: ('%s in debug_connection "%V"', 'ngx_event_debug_connection', 244154), 663064: ('timer delta: %M', 'ngx_process_events_and_timers', 244719), 663216: ('%ui worker_connections are not enough for %ui listening sockets', 'ngx_event_init_conf', 240475), 663328: ('%ui worker_connections exceed open file resource limit: %i', 'ngx_event_module_init', 240766), 663392: ('when the server runs without a master process the "%V" event type must be the same as in previous configuration - "%s" and it cannot be changed on the fly, to change it you need to stop server and start it again', 'ngx_event_use', 241461), 663640: ('low address bits of %V are meaningless', 'ngx_event_debug_connection', 244046), 663711: ('posted next event %p', 'ngx_event_move_posted_next', 246126), 663752: ('accept mutex lock failed: %ui', 'ngx_trylock_accept_mutex', 246876), 663815: ('accept on %V, ready: %d', 'ngx_event_accept', 247253), 663858: ('*%uA accept: %V fd:%d', 'ngx_event_accept', 248960), 663880: (' while accepting new connection on %V', 'ngx_accept_log_error', 246926), 663918: ('recvmsg on %V, ready: %d', 'ngx_event_recvmsg', 249705), 664025: ('recvmsg: fd:%d n:%z', 'ngx_event_recvmsg', 251859), 664045: ('*%uA recvmsg: %V fd:%d n:%z', 'ngx_event_recvmsg', 252103), 664079: ('%s socket %d', 'ngx_event_connect_peer', 252699), 664121: ('bind(%V) failed', 'ngx_event_connect_peer', 253993), 664360: ('pipe offset: %O', 'ngx_event_pipe_write_chain_to_temp_file', 254886), 664376: ('size: %z', 'ngx_event_pipe_write_chain_to_temp_file', 255131), 664408: ('input buf #%d', 'ngx_event_pipe_copy_input_filter', 256286), 664440: ('pipe write downstream: %d', 'ngx_event_pipe', 256883), 664493: ('pipe write busy: %uz', 'ngx_event_pipe', 257500), 664514: ('pipe write buf ls:%d %p %z', 'ngx_event_pipe', 257765), 664541: ('pipe write: out:%p, f:%ui', 'ngx_event_pipe', 258074), 664584: ('pipe read upstream: %d', 'ngx_event_pipe', 258285), 664607: ('pipe preread: %z', 'ngx_event_pipe', 256991), 664646: ('pipe temp offset: %O', 'ngx_event_pipe', 259197), 664691: ('pipe recv chain: %z', 'ngx_event_pipe', 259293), 664711: ('pipe length: %O', 'ngx_event_pipe', 261992), 664744: ('pipe buf ls:%d %p, pos %p, size: %z', 'ngx_event_pipe_write_chain_to_temp_file', 254934), 664960: ('pipe buf busy s:%d t:%d f:%d %p, pos %p, size: %z file: %O, size: %O', 'ngx_event_pipe', 259890), 665032: ('pipe buf out  s:%d t:%d f:%d %p, pos %p, size: %z file: %O, size: %O', 'ngx_event_pipe', 260116), 665104: ('pipe buf in   s:%d t:%d f:%d %p, pos %p, size: %z file: %O, size: %O', 'ngx_event_pipe', 260249), 665176: ('pipe buf free s:%d t:%d f:%d %p, pos %p, size: %z file: %O, size: %O', 'ngx_event_pipe', 260386), 665245: ('%H', 'ngx_timezone_update', 262316), 665248: ('malloc(%uz) failed', 'ngx_alloc', 262603), 665267: ('malloc: %p:%uz', 'ngx_alloc', 262638), 665282: ('posix_memalign: %p:%uz @%uz', 'ngx_memalign', 262880), 665312: ('posix_memalign(%uz, %uz) failed', 'ngx_memalign', 262831), 665344: ('read: %d, %p, %uz, %O', 'ngx_read_file', 263013), 665366: ('pread() "%s" failed', 'ngx_read_file', 263069), 665386: ('write: %d, %p, %uz, %O', 'ngx_write_file', 263156), 665434: ('pwrite() "%s" failed', 'ngx_write_file', 263330), 665455: ('writev: %d, %uz, %O', 'ngx_write_chain_to_file', 263648), 665501: ('pwritev() "%s" failed', 'ngx_write_chain_to_file', 263879), 665523: ('ftruncate() "%s" failed', 'ngx_create_file_mapping', 264452), 665547: ('mmap(%uz) "%s" failed', 'ngx_create_file_mapping', 264301), 665569: ('munmap(%uz) "%s" failed', 'ngx_close_file_mapping', 264608), 665600: ('pwritev() "%s" has written only %z of %uz', 'ngx_write_chain_to_file', 263997), 665642: ('recv: eof:%d, avail:%d', 'ngx_unix_recv', 266142), 665665: ('recv: fd:%d %z of %uz', 'ngx_unix_recv', 266064), 665687: ('recv: avail:%d', 'ngx_unix_recv', 266344), 665756: ('readv: eof:%d, avail:%d', 'ngx_readv_chain', 266901), 665780: ('readv: %ui, last:%uz', 'ngx_readv_chain', 267107), 665801: ('readv: avail:%d', 'ngx_readv_chain', 267277), 665850: ('send: fd:%d %z of %uz', 'ngx_unix_send', 267996), 665928: ('bad buf in output chain t:%d r:%d f:%d %p %p-%p %p %O-%O', 'ngx_output_chain_to_iovec', 268543), 665992: ('file buf in writev t:%d r:%d f:%d %p %p-%p %p %O-%O', 'ngx_writev_chain', 269089), 666044: ('writev: %z of %uz', 'ngx_writev', 268652), 666104: ('sendto: fd:%d %z of %uz to "%V"', 'ngx_udp_unix_send', 269394), 666254: ('sendmsg: %z of %uz', 'ngx_sendmsg', 270079), 666304: ('file buf in sendmsg t:%d r:%d f:%d %p %p-%p %p %O-%O', 'ngx_udp_unix_sendmsg_chain', 270768), 666408: ('recvmsg() returned not enough data: %z', 'ngx_read_channel', 271870), 666496: ('recvmsg() returned invalid ancillary data level %d or type %d', 'ngx_read_channel', 272030), 666560: ('mmap(MAP_ANON|MAP_SHARED, %uz) failed', 'ngx_shm_alloc', 272547), 666598: ('munmap(%p, %uz) failed', 'ngx_shm_free', 272643), 666769: ('signal %d (%s) received%s', 'ngx_signal_handler', 273524), 666812: ('%s %P exited on signal %d%s', 'ngx_signal_handler', 273958), 666840: ('%s %P exited with code %d', 'ngx_signal_handler', 274089), 666866: ('channel %d:%d', 'ngx_spawn_process', 275334), 666880: ('start %s %P', 'ngx_spawn_process', 275914), 666892: ('sigaction(%s) failed', 'ngx_init_signals', 276356), 666913: ('kill(%P, %d) failed', 'ngx_os_signal_process', 276559), 667048: ('signal %d (%s) received from %P%s', 'ngx_signal_handler', 273384), 667208: ('%s %P exited with fatal code %d and cannot be respawned', 'ngx_signal_handler', 274206), 667264: ('shared memory zone "%V" was locked by %P', 'ngx_signal_handler', 274332), 667312: ('execve() failed while executing %s "%s"', 'ngx_execute_proc', 274436), 667352: ('no more than %d processes can be spawned', 'ngx_spawn_process', 274834), 667400: ('socketpair() failed while spawning "%s"', 'ngx_spawn_process', 275276), 667440: ('ioctl(FIONBIO) failed while spawning "%s"', 'ngx_spawn_process', 275402), 667488: ('ioctl(FIOASYNC) failed while spawning "%s"', 'ngx_spawn_process', 275532), 667536: ('fcntl(F_SETOWN) failed while spawning "%s"', 'ngx_spawn_process', 275597), 667584: ('fcntl(FD_CLOEXEC) failed while spawning "%s"', 'ngx_spawn_process', 275662), 667632: ('fork() failed while spawning "%s"', 'ngx_spawn_process', 275839), 668032: ('sched_setaffinity(): using cpu #%ui', 'ngx_setaffinity', 277282), 668103: ('setproctitle: "%s"', 'ngx_setproctitle', 277868), 668184: ('getrlimit(RLIMIT_NOFILE): %r:%r', 'ngx_os_status', 278353), 668267: ('channel: %i', 'ngx_channel_handler', 279151), 668279: ('channel command: %ui', 'ngx_channel_handler', 279303), 668300: ('get channel s:%i pid:%P fd:%d', 'ngx_channel_handler', 279573), 668420: ('setpriority(%d) failed', 'ngx_worker_process_init', 281424), 668443: ('setgid(%d) failed', 'ngx_worker_process_init', 281864), 668461: ('initgroups(%s, %d) failed', 'ngx_worker_process_init', 281921), 668487: ('setuid(%d) failed', 'ngx_worker_process_init', 282082), 668551: ('chdir("%s") failed', 'ngx_worker_process_init', 282264), 668629: ('kill (%P, %d)', 'ngx_signal_worker_processes', 284266), 668643: ('termination cycle: %M', 'ngx_master_process_cycle', 285455), 668676: ('wake up, sigio %i', 'ngx_master_process_cycle', 285524), 668708: ('could not respawn %s', 'ngx_master_process_cycle', 286192), 668736: ('close channel s:%i pid:%P our:%P fd:%d', 'ngx_channel_handler', 279717), 668776: ('*%uA open socket #%d left in connection %ui', 'ngx_worker_process_exit', 279921), 668824: ('pass channel s:%i pid:%P fd:%d to s:%i pid:%P fd:%d', 'ngx_pass_open_channel', 280487), 668880: ('setrlimit(RLIMIT_NOFILE, %i) failed', 'ngx_worker_process_init', 281514), 668920: ('setrlimit(RLIMIT_CORE, %O) failed', 'ngx_worker_process_init', 281604), 669032: ('child: %i %P e:%d t:%d d:%d r:%d j:%d', 'ngx_signal_worker_processes', 283997), 669072: ('pass close channel s:%i pid:%P to:%P', 'ngx_master_process_cycle', 285876), 669112: ('rename() %s back to %s failed after the new binary process "%s" exited', 'ngx_master_process_cycle', 286356), 669223: ('OS: %s %s', 'ngx_os_specific_status', 288362), 669277: ('epoll del connection: fd:%d', 'ngx_epoll_del_connection', 288802), 669305: ('epoll_ctl(%d, %d) failed', 'ngx_epoll_del_connection', 288867), 669330: ('read() eventfd %d failed', 'ngx_epoll_notify_handler', 289993), 669407: ('notify eventfd: %d', 'ngx_epoll_init', 290954), 669508: ('epoll timer: %M', 'ngx_epoll_process_events', 291655), 669524: ('epoll: stale event %p', 'ngx_epoll_process_events', 292153), 669546: ('epoll: fd:%d ev:%04XD d:%p', 'ngx_epoll_process_events', 292193), 669573: ('write() to eventfd %d failed', 'ngx_epoll_notify', 292683), 669648: ('epoll add connection: fd:%d ev:%08XD', 'ngx_epoll_add_connection', 289062), 669688: ('epoll_ctl(EPOLL_CTL_ADD, %d) failed', 'ngx_epoll_add_connection', 289118), 669728: ('epoll del event: fd:%d op:%d ev:%08XD', 'ngx_epoll_del_event', 289399), 669768: ('epoll add event: fd:%d op:%d ev:%08XD', 'ngx_epoll_add_event', 289730), 669808: ('read() eventfd %d: %z count:%uL', 'ngx_epoll_notify_handler', 290041), 669888: ('testing the EPOLLRDHUP flag: %s', 'ngx_epoll_init', 290797), 669968: ('epoll_wait() error on fd:%d ev:%04XD', 'ngx_epoll_process_events', 292255), 670008: ('sendfile() reported that "%s" was truncated at %O', 'ngx_linux_sendfile_chain', 293925), 670112: ('sendfile: @%O %uz', 'ngx_linux_sendfile_chain', 293692), 670199: ('sendfile: %z of %uz @%O', 'ngx_linux_sendfile_chain', 293977), 670224: ('duplicate location "%V" in %s:%ui', 'ngx_http_init_static_location_trees', 295933), 670264: ('invalid server name or wildcard "%V" on %V', 'ngx_http_block', 299263), 670312: ('conflicting server name "%V" on %V, ignored', 'ngx_http_block', 299385), 670360: ('duplicate listen options for %V', 'ngx_http_add_listen', 302762), 670392: ('a duplicate default server for %V', 'ngx_http_add_listen', 302810), 670432: ('protocol options redefined for %V', 'ngx_http_add_listen', 302535), 670484: ('a duplicate listen %V', 'ngx_http_add_listen', 302714), 670506: ('duplicate MIME type "%V"', 'ngx_http_types_slot', 303343), 670623: ('invalid method "%V"', 'ngx_http_core_limit_except', 307118), 670643: ('server name "%V" is invalid', 'ngx_http_core_server_name', 308750), 670692: ('test location: "%*s"', 'ngx_http_core_find_location', 313159), 670781: ('invalid parameter "%V"', 'ngx_http_disable_symlinks', 315305), 670804: ('duplicate parameters "%V %V"', 'ngx_http_disable_symlinks', 315512), 670936: ('invalid fastopen "%V"', 'ngx_http_core_listen', 317937), 670967: ('invalid backlog "%V"', 'ngx_http_core_listen', 318020), 670996: ('invalid rcvbuf "%V"', 'ngx_http_core_listen', 318115), 671024: ('invalid sndbuf "%V"', 'ngx_http_core_listen', 318210), 671079: ('invalid ipv6only flags "%s"', 'ngx_http_core_listen', 318299), 671152: ('generic phase: %ui', 'ngx_http_core_generic_phase', 321756), 671171: ('post rewrite phase: %ui', 'ngx_http_core_post_rewrite_phase', 322109), 671195: ('uri changes: %d', 'ngx_http_core_post_rewrite_phase', 322181), 671211: ('post access phase: %ui', 'ngx_http_core_post_access_phase', 322769), 671261: ('using configuration "%s%V"', 'ngx_http_core_find_config_phase', 323604), 671288: ('http cl:%O max:%O', 'ngx_http_core_find_config_phase', 323946), 671320: ('"%xT-%xO"', 'ngx_http_set_etag', 324994), 671330: ('W/%V', 'ngx_http_weak_etag', 325140), 671355: ('http output filter "%V?%V"', 'ngx_http_output_filter', 325435), 671382: ('content phase: %ui', 'ngx_http_core_content_phase', 326712), 671425: ('http subrequest "%V?%V"', 'ngx_http_subrequest', 328848), 671449: ('internal redirect: "%V?%V"', 'ngx_http_internal_redirect', 329458), 671476: ('test location: "%V"', 'ngx_http_named_location', 329613), 671496: ('using location: %V "%V?%V"', 'ngx_http_named_location', 330052), 671523: ('http cleanup add: %p', 'ngx_http_cleanup_add', 330255), 673048: ('the pool size must be no less than %uz', 'ngx_http_core_pool_size', 305034), 673088: ('the pool size must be a multiple of %uz', 'ngx_http_core_pool_size', 305079), 673128: ('invalid "open_file_cache" parameter "%V"', 'ngx_http_core_open_file_cache', 305563), 673280: ('duplicate extension "%V", content type: "%V", previous content type: "%V"', 'ngx_http_core_type', 308204), 673360: ('server name "%V" has suspicious symbols', 'ngx_http_core_server_name', 308566), 673400: ('using regex "%V" requires PCRE library', 'ngx_http_core_server_name', 308678), 673536: ('"%V" must have "off", "on" or "if_not_owner" parameter', 'ngx_http_disable_symlinks', 315435), 673640: ('value "%V" must be between 300 and 599', 'ngx_http_core_error_page', 316212), 673680: ('"%V" directive is duplicate, "%s" directive was specified earlier', 'ngx_http_core_root', 316621), 673816: ('the $document_root variable cannot be used in the "%V" directive', 'ngx_http_core_root', 316760), 673888: ('the $realpath_root variable cannot be used in the "%V" directive', 'ngx_http_core_root', 316890), 673960: ('%s in "%V" of the "listen" directive', 'ngx_http_core_listen', 317315), 674000: ('accept filters "%V" are not supported on this platform, ignored', 'ngx_http_core_listen', 318255), 674176: ('invalid so_keepalive value: "%s"', 'ngx_http_core_listen', 318736), 674216: ('invalid location modifier "%V"', 'ngx_http_core_location', 320727), 674248: ('location "%V" cannot be inside the exact location "%V"', 'ngx_http_core_location', 321476), 674304: ('location "%V" cannot be inside the named location "%V"', 'ngx_http_core_location', 321524), 674360: ('named location "%V" can be on the server level only', 'ngx_http_core_location', 321569), 674416: ('location "%V" is outside location "%V"', 'ngx_http_core_location', 321617), 674456: ('rewrite or internal redirection cycle while processing "%V"', 'ngx_http_core_post_rewrite_phase', 322240), 674520: ('client intended to send too large body: %O bytes', 'ngx_http_core_find_config_phase', 324030), 674576: ('"alias" cannot be used in location "%V" where URI was rewritten', 'ngx_http_map_uri_to_path', 326184), 674640: ('directory index of "%s" is forbidden', 'ngx_http_core_content_phase', 326852), 674680: ('subrequests cycle while processing "%V"', 'ngx_http_subrequest', 328666), 674720: ('request reference counter overflow while processing "%V"', 'ngx_http_subrequest', 328728), 674784: ('nested in-memory subrequest "%V"', 'ngx_http_subrequest', 328797), 674824: ('rewrite or internal redirection cycle while internally redirecting to "%V"', 'ngx_http_internal_redirect', 329389), 674904: ('rewrite or internal redirection cycle while redirect to named location "%V"', 'ngx_http_named_location', 329710), 674984: ('empty URI in redirect to named location "%V"', 'ngx_http_named_location', 329771), 675032: ('could not find named location "%V"', 'ngx_http_named_location', 330091), 675072: ('http special response: %i, "%V?%V"', 'ngx_http_special_response_handler', 332654), 675222: ('http large header copy: %uz', 'ngx_http_alloc_large_header_buffer', 335855), 675275: (', client: %V', 'ngx_http_log_error', 336133), 675288: (', request: "%V"', 'ngx_http_log_error_handler', 336695), 675304: (', subrequest: "%V"', 'ngx_http_log_error_handler', 336351), 675323: (', upstream: "%V%V%s%V"', 'ngx_http_log_error_handler', 336453), 675346: (', host: "%V"', 'ngx_http_log_error_handler', 336509), 675359: (', referrer: "%V"', 'ngx_http_log_error_handler', 336561), 675376: ('post action: "%V"', 'ngx_http_post_action', 336999), 675394: ('http posted request: "%V?%V"', 'ngx_http_run_posted_requests', 338111), 675531: ('close http connection: %d', 'ngx_http_close_connection', 339086), 675557: ('http request count:%d blk:%d', 'ngx_http_close_request', 339207), 675613: ('http run request: "%V?%V"', 'ngx_http_request_handler', 340009), 675668: ('lingering read: %z', 'ngx_http_lingering_close_handler', 340755), 675796: ('hc free: %p', 'ngx_http_finalize_connection', 344514), 675808: ('hc busy: %p %i', 'ngx_http_finalize_connection', 344567), 675898: ('http uri: "%V"', 'ngx_http_process_request_uri', 348521), 675913: ('http args: "%V"', 'ngx_http_process_request_uri', 348572), 675929: ('http exten: "%V"', 'ngx_http_process_request_uri', 348623), 676045: ('http header: "%V: %V"', 'ngx_http_process_request_headers', 349938), 676110: ('http request line: "%V"', 'ngx_http_process_request_line', 351296), 676159: ('http finalizer done: "%V?%V"', 'ngx_http_request_finalizer', 351763), 676188: ('http writer handler: "%V?%V"', 'ngx_http_writer', 352036), 676237: ('http writer done: "%V?%V"', 'ngx_http_writer', 352930), 676672: ('http large header free: %p %uz', 'ngx_http_alloc_large_header_buffer', 335663), 676704: ('http large header alloc: %p %uz', 'ngx_http_alloc_large_header_buffer', 335799), 676736: ('http terminate request count:%d', 'ngx_http_terminate_request', 339736), 676768: ('http terminate cleanup count:%d blk:%d', 'ngx_http_terminate_request', 339813), 676808: ('http terminate handler count:%d', 'ngx_http_terminate_handler', 340150), 676880: ('http finalize request: %i, "%V?%V" a:%d, c:%d', 'ngx_http_finalize_request', 345917), 676928: ('subrequest: "%V?%V" logged again', 'ngx_http_finalize_request', 346745), 676968: ('http finalize non-active request: "%V?%V"', 'ngx_http_finalize_request', 346870), 677016: ('http wake parent request: "%V?%V"', 'ngx_http_finalize_request', 346671), 677056: ('client sent duplicate header line: "%V: %V", previous value: "%V: %V"', 'ngx_http_process_unique_header_line', 347276), 677128: ('client sent duplicate host header: "%V: %V", previous value: "%V: %V"', 'ngx_http_process_host', 347520), 677552: ('client sent unknown "Transfer-Encoding": "%V"', 'ngx_http_process_request_header', 349267), 677640: ('client sent too long header line: "%*s..."', 'ngx_http_process_request_headers', 350242), 677688: ('client sent invalid header line: "%*s"', 'ngx_http_process_request_headers', 350298), 677728: ('client sent invalid header line: "%*s\\x%02xd..."', 'ngx_http_process_request_headers', 350578), 677832: ('http writer output filter: %i, "%V?%V"', 'ngx_http_writer', 352500), 677872: ('client %V closed keepalive connection', 'ngx_http_keepalive_handler', 354779), 679749: ("s:%d in:'%Xd:%c'", 'ngx_http_parse_complex_uri', 359975), 679766: ('unescaped URI: "%V"', 'ngx_http_parse_unsafe_uri', 362692), 679786: ('unsafe URI "%V" was detected', 'ngx_http_parse_unsafe_uri', 362838), 679815: ('parse header: "%V: %V"', 'ngx_http_parse_multi_header_lines', 362978), 679838: ('http chunked byte: %02Xd s:%d', 'ngx_http_parse_chunked', 363982), 679887: ('%T.%03M', 'ngx_http_log_request_time', 366951), 679903: ('invalid parameter "%s"', 'ngx_http_log_compile_format', 367731), 679926: ('unknown log format "%V"', 'ngx_http_log_set_log', 370495), 679965: ('invalid flush time "%V"', 'ngx_http_log_set_log', 370965), 679998: ('testing "%s" existence failed', 'ngx_http_log_write', 372152), 680028: ('http log "%s"', 'ngx_http_log_write', 372527), 680042: ('%s "%s" failed', 'ngx_http_log_write', 372577), 680057: ('http log #%d', 'ngx_http_log_write', 372656), 680070: ('write() to "%s" failed', 'ngx_http_log_write', 372746), 680304: ('invalid "open_log_file_cache" parameter "%V"', 'ngx_http_log_open_file_cache', 365749), 680400: ('unknown log format escaping "%s"', 'ngx_http_log_compile_format', 367585), 680440: ('the closing bracket in "%V" variable is missing', 'ngx_http_log_compile_format', 368607), 680488: ('duplicate "log_format" name "%V"', 'ngx_http_log_set_format', 368751), 680568: ('no buffer is defined for access_log "%V"', 'ngx_http_log_set_log', 371271), 680704: ('access_log "%V" already defined with conflicting parameters', 'ngx_http_log_set_log', 371225), 680768: ('write() to "%s" was incomplete: %z of %uz', 'ngx_http_log_write', 372779), 680816: ('send() to syslog has written only %z of %uz', 'ngx_http_log_handler', 373936), 681320: ('http body chunked buf t:%d f:%d %p, pos %p, size: %z file: %O, size: %O', 'ngx_http_request_body_filter', 375546), 681392: ('client intended to send too large chunked body: %O+%O bytes', 'ngx_http_request_body_filter', 375613), 681496: ('http body pipelined header: %uz', 'ngx_http_copy_pipelined_header', 377407), 681576: ('http write client request body, bufs %p', 'ngx_http_write_request_body', 377875), 681712: ('http client request body recv %z', 'ngx_http_do_read_client_request_body', 379324), 681752: ('http client request body rest %O', 'ngx_http_do_read_client_request_body', 378641), 681792: ('http client request body preread %uz', 'ngx_http_read_client_request_body', 380929), 681832: ('http body new buf t:%d f:%d %p, pos %p, size: %z file: %O, size: %O', 'ngx_http_request_body_save_filter', 382600), 681948: ('timeout=%T', 'ngx_http_variable_sent_keep_alive', 387264), 681959: ('invalid $limit_rate "%V"', 'ngx_http_variable_set_limit_rate', 388889), 681984: ('%08xD%08xD%08xD%08xD', 'ngx_http_variable_request_id', 389235), 682005: ('realpath() "%s" failed', 'ngx_http_variable_realpath_root', 390173), 682054: ('the duplicate "%V" variable', 'ngx_http_add_variable', 391461), 682082: ('unknown variable index: %ui', 'ngx_http_get_indexed_variable', 392341), 682129: ('unknown "%V" variable', 'ngx_http_variables_init_vars', 394731), 682880: ('conflicting variable name "%V"', 'ngx_http_add_variable', 391242), 682912: ('cycle while evaluating variable "%V"', 'ngx_http_get_indexed_variable', 392404), 682966: ('http script copy: "%*s"', 'ngx_http_script_copy_code', 395285), 682990: ('http script fullname: "%V"', 'ngx_http_script_full_name_code', 395502), 683017: ('http script var: "%*s"', 'ngx_http_script_copy_var_code', 395780), 683040: ('invalid size "%V"', 'ngx_http_complex_value_size', 396361), 683205: ('http script file op %p "%V"', 'ngx_http_script_file_code', 401536), 683285: ('http script value: "%v"', 'ngx_http_script_value_code', 402369), 683309: ('http script set $%V', 'ngx_http_script_set_var_code', 402618), 683373: ('http script var: "%v"', 'ngx_http_script_var_code', 402933), 683400: ('using variable "$%c" requires PCRE library', 'ngx_http_script_compile', 398042), 683480: ('upstream sent duplicate header line: "%V: %V", previous value: "%V: %V", ignored', 'ngx_http_upstream_process_limit_rate', 403716), 683568: ('upstream sent duplicate header line: "%V: %V", previous value: "%V: %V"', 'ngx_http_upstream_process_transfer_encoding', 404450), 683720: ('upstream sent unknown "Transfer-Encoding": "%V"', 'ngx_http_upstream_process_transfer_encoding', 404374), 683768: ('upstream sent invalid "Content-Length" header: "%V: %V"', 'ngx_http_upstream_process_content_length', 408211), 683824: ('finalize http upstream request: %i', 'ngx_http_upstream_finalize_request', 410904), 683864: ('close http upstream connection: %d', 'ngx_http_upstream_finalize_request', 411082), 683904: ('cleanup http upstream request: "%V"', 'ngx_http_upstream_cleanup', 411699), 683944: ('http upstream request: "%V?%V"', 'ngx_http_upstream_handler', 411846), 683976: ('http upstream check client, write event:%d, "%V"', 'ngx_http_upstream_check_broken_connection', 412075), 684424: ('balancing method does not support parameter "%V"', 'ngx_http_upstream_server', 416741), 684480: ('cache file "%s" contains invalid header', 'ngx_http_upstream_cache_send', 417624), 684616: ('http upstream process upgraded, fu:%ui', 'ngx_http_upstream_process_upgraded', 419868), 684824: ('%V_buffer_size %uz is not enough for cache key, it should be increased to at least %uz', 'ngx_http_upstream_init_request', 432750), 684912: ('no resolver defined to resolve %V', 'ngx_http_upstream_init_request', 434710), 684952: ('http upstream resolve: "%V?%V"', 'ngx_http_upstream_resolve_handler', 435099), 684984: ('%V could not be resolved (%i: %s)', 'ngx_http_upstream_resolve_handler', 435191), 685104: ('http init upstream, client timer: %d', 'ngx_http_upstream_init', 436952), 685144: ('upstream "%V" may not have port %d', 'ngx_http_upstream_add', 437518), 685184: ('upstream "%V" may not have port %d in %s:%ui', 'ngx_http_upstream_add', 437474), 685385: ('rewritten cookie: "%V"', 'ngx_http_upstream_rewrite_set_cookie', 406815), 685408: ('rewritten location: "%V"', 'ngx_http_upstream_rewrite_location', 407014), 685438: ('rewritten refresh: "%V"', 'ngx_http_upstream_rewrite_refresh', 407875), 685487: ('http upstream temp fd: %d', 'ngx_http_upstream_finalize_request', 411117), 685513: ('http upstream recv(): %d', 'ngx_http_upstream_check_broken_connection', 412490), 685561: ('upstream stores "%s" to "%s"', 'ngx_http_upstream_process_request', 414762), 685590: ('http upstream exit: %p', 'ngx_http_upstream_process_request', 414935), 685729: ('%s in upstream "%V"', 'ngx_http_upstream_server', 416939), 685891: ('http cacheable: %d', 'ngx_http_upstream_process_header', 426261), 685965: ('http upstream connect: %i', 'ngx_http_upstream_connect', 429955), 686009: ('cache "%V" not found', 'ngx_http_upstream_init_request', 432620), 686030: ('http upstream cache: %i', 'ngx_http_upstream_init_request', 432810), 686061: ('invalid local address "%V"', 'ngx_http_upstream_init_request', 433926), 686088: ('no port in upstream "%V"', 'ngx_http_upstream_init_request', 434338), 686139: ('name was resolved to %V', 'ngx_http_upstream_resolve_handler', 435301), 686163: ('http next upstream, %xi', 'ngx_http_upstream_next', 435681), 686187: ('duplicate upstream "%V"', 'ngx_http_upstream_add', 437264), 686211: ('invalid address "%V"', 'ngx_http_upstream_bind_set_slot', 439165), 686780: ('get rr peer, try: %ui', 'ngx_http_upstream_get_round_robin_peer', 440838), 686802: ('get rr peer, current: %p %i', 'ngx_http_upstream_get_round_robin_peer', 441166), 686845: ('free rr peer %ui %ui', 'ngx_http_upstream_free_round_robin_peer', 441701), 686866: ('free rr peer failed: %p %i', 'ngx_http_upstream_free_round_robin_peer', 441840), 686893: ('%s in upstream "%V" in %s:%ui', 'ngx_http_upstream_init_round_robin', 443564), 686968: ('no servers in upstream "%V" in %s:%ui', 'ngx_http_upstream_init_round_robin', 442301), 687008: ('no port in upstream "%V" in %s:%ui', 'ngx_http_upstream_init_round_robin', 443475), 687048: ('http file cache watermark: %ui', 'ngx_http_file_cache_set_watermark', 444618), 687080: ('http file cache forced expire: #%d %d %02xd%02xd%02xd%02xd', 'ngx_http_file_cache_forced_expire', 445691), 687144: ('ignore long locked inactive cache entry %*s, count:%d', 'ngx_http_file_cache_forced_expire', 446003), 687200: ('cache "%V" uses the "%V" cache path while previously it used the "%V" cache path', 'ngx_http_file_cache_init', 448451), 687288: ('cache "%V" had previously different levels', 'ngx_http_file_cache_init', 448512), 687336: ('http file cache: %V %.3fM, bsize: %uz', 'ngx_http_file_cache_loader', 449255), 687376: ('http file cache expire: #%d %d %02xd%02xd%02xd%02xd', 'ngx_http_file_cache_manager', 449540), 687432: ('http file cache size: %O c:%ui w:%i', 'ngx_http_file_cache_manager', 450678), 687472: ('http file cache manager: %ui e:%M n:%M', 'ngx_http_file_cache_manager', 450498), 687512: ('http file cache loader time elapsed: %M', 'ngx_http_file_cache_manage_file', 452321), 687552: ('http file cache exists: %i e:%d', 'ngx_http_file_cache_open', 453328), 687584: ('http file cache lock u:%d wt:%M', 'ngx_http_file_cache_open', 454251), 687616: ('cache file "%s" version mismatch', 'ngx_http_file_cache_read', 455144), 687656: ('cache file "%s" has md5 collision', 'ngx_http_file_cache_read', 455210), 687696: ('cache file "%s" has too long header', 'ngx_http_file_cache_read', 455342), 687736: ('cache file "%s" has incorrect vary length', 'ngx_http_file_cache_read', 455408), 687784: ('cache file "%s" has incorrect vary hash', 'ngx_http_file_cache_read', 455797), 687824: ('http file cache expired: %i %T %T', 'ngx_http_file_cache_read', 456143), 687864: ('http file cache rename: "%s" to "%s"', 'ngx_http_file_cache_update', 457482), 687904: ('http file cache "%s" not found', 'ngx_http_file_cache_update_header', 457991), 687936: ('pread() read only %z of %z from "%s"', 'ngx_http_file_cache_update_header', 458322), 687976: ('http file cache "%s" content changed', 'ngx_http_file_cache_update_header', 458470), 688016: ('http file cache incomplete: "%s"', 'ngx_http_file_cache_free', 459852), 688056: ('stalled cache updating, error:%ui', 'ngx_http_file_cache_cleanup', 460185), 688096: ('invalid use_temp_path value "%V", it must be "on" or "off"', 'ngx_http_file_cache_set_slot', 460846), 688160: ('invalid loader_files value "%V"', 'ngx_http_file_cache_set_slot', 461818), 688192: ('invalid loader_sleep value "%V"', 'ngx_http_file_cache_set_slot', 461915), 688224: ('invalid loader_threshold value "%V"', 'ngx_http_file_cache_set_slot', 462012), 688264: ('invalid manager_files value "%V"', 'ngx_http_file_cache_set_slot', 462090), 688304: ('invalid manager_sleep value "%V"', 'ngx_http_file_cache_set_slot', 462183), 688344: ('invalid manager_threshold value "%V"', 'ngx_http_file_cache_set_slot', 461461), 688384: ('"%V" must have "keys_zone" parameter', 'ngx_http_file_cache_set_slot', 462711), 688421: ('http file cache delete: "%s"', 'ngx_http_file_cache_delete_file', 444968), 688450: ('http file cache expire: "%s"', 'ngx_http_file_cache_delete', 445305), 688509: ('could not allocate node%s', 'ngx_http_file_cache_exists', 446865), 688535: ('cache file: "%s"', 'ngx_http_file_cache_name', 447063), 688552: ('http file cache vary: "%*s"', 'ngx_http_file_cache_vary', 447276), 688580: ('http file cache vary: %V', 'ngx_http_file_cache_vary', 447541), 688658: (' in cache keys zone "%V"%Z', 'ngx_http_file_cache_init', 448802), 688731: ('http file cache free: %O', 'ngx_http_file_cache_manager', 450399), 688756: ('cache file "%s" is too small', 'ngx_http_file_cache_add_file', 451129), 688785: ('http file cache wait: "%V?%V"', 'ngx_http_file_cache_lock_wait_handler', 451711), 688834: ('http cache key: "%V"', 'ngx_http_file_cache_create_key', 452733), 688855: ('http file cache fd: %d', 'ngx_http_file_cache_open', 453806), 689036: ('http file cache "%s" changed', 'ngx_http_file_cache_update_header', 458203), 689065: ('http file cache send: %s', 'ngx_http_cache_send', 459100), 689090: ('http file cache free, fd: %d', 'ngx_http_file_cache_free', 459676), 689151: ('invalid "levels" "%V"', 'ngx_http_file_cache_set_slot', 460762), 689199: ('invalid keys zone size "%V"', 'ngx_http_file_cache_set_slot', 461072), 689227: ('keys zone "%V" is too small', 'ngx_http_file_cache_set_slot', 461027), 689255: ('invalid inactive value "%V"', 'ngx_http_file_cache_set_slot', 461558), 689293: ('invalid max_size value "%V"', 'ngx_http_file_cache_set_slot', 461649), 689331: ('invalid min_free value "%V"', 'ngx_http_file_cache_set_slot', 461740), 689454: ('duplicate zone "%V"', 'ngx_http_file_cache_set_slot', 462664), 689474: ('invalid time value "%V"', 'ngx_http_file_cache_valid_set_slot', 463049), 689498: ('invalid status "%V"', 'ngx_http_file_cache_valid_set_slot', 463251), 689680: ('zero size buf in writer t:%d r:%d f:%d %p %p-%p %p %O-%O', 'ngx_http_write_filter', 463805), 689744: ('negative size buf in writer t:%d r:%d f:%d %p %p-%p %p %O-%O', 'ngx_http_write_filter', 463953), 689808: ('write new buf t:%d f:%d %p, pos %p, size: %z file: %O, size: %O', 'ngx_http_write_filter', 464130), 689872: ('http write filter: l:%ui f:%ui s:%O', 'ngx_http_write_filter', 464919), 689943: ('http write filter limit %O', 'ngx_http_write_filter', 465898), 689970: ('http write filter %p', 'ngx_http_write_filter', 465933), 689991: ('%03ui ', 'ngx_http_header_filter', 468452), 689998: ('Content-Length: %O\r\n', 'ngx_http_header_filter', 468931), 690019: ('Keep-Alive: timeout=%T\r\n', 'ngx_http_header_filter', 468423), 690783: ('http chunk: %O', 'ngx_http_chunked_body_filter', 469812), 690798: ('%xO\r\n', 'ngx_http_chunked_body_filter', 470122), 690812: ('http trailer: "%V: %V"', 'ngx_http_chunked_body_filter', 470825), 690835: ('http ir:%V etag:%V', 'ngx_http_range_header_filter', 472538), 690854: ('http ir:%T lm:%T', 'ngx_http_range_header_filter', 472577), 690871: ('bytes %O-%O/%O', 'ngx_http_range_header_filter', 473603), 690886: ('%O-%O/%O\r\n\r\n', 'ngx_http_range_header_filter', 472263), 690899: ('bytes */%O', 'ngx_http_range_header_filter', 472969), 690916: ('http range body buf: %O-%O', 'ngx_http_range_body_filter', 474318), 690992: ('\r\n--%0muA\r\nContent-Type: %V; charset=%V\r\nContent-Range: bytes ', 'ngx_http_range_header_filter', 473791), 691056: ('\r\n--%0muA\r\nContent-Type: %V\r\nContent-Range: bytes ', 'ngx_http_range_header_filter', 472115), 691112: ('\r\n--%0muA\r\nContent-Range: bytes ', 'ngx_http_range_header_filter', 473824), 691152: ('multipart/byteranges; boundary=%0muA', 'ngx_http_range_header_filter', 472187), 691192: ('http postpone filter "%V?%V" %p', 'ngx_http_postpone_filter', 476064), 691256: ('too big subrequest response: %uz', 'ngx_http_postpone_filter', 476329), 691296: ('http postpone filter in memory %uz bytes', 'ngx_http_postpone_filter', 476178), 691344: ('http postpone filter wake "%V?%V"', 'ngx_http_postpone_filter', 476753), 691424: ('http postpone filter output "%V?%V"', 'ngx_http_postpone_filter', 476631), 691537: ('ssi out: %p %p', 'ngx_http_ssi_output', 478136), 691581: ('conflicting SSI command "%V"', 'ngx_http_ssi_preconfiguration', 479239), 691620: ('invalid variable name in "%V"', 'ngx_http_ssi_evaluate_string', 480117), 691650: ('ssi if expr="%V"', 'ngx_http_ssi_if', 481299), 691667: ('evaluated left: "%V"', 'ngx_http_ssi_if', 481618), 691688: ('evaluated right: "%V"', 'ngx_http_ssi_if', 482023), 691710: ('invalid expression in "%V"', 'ngx_http_ssi_if', 482193), 691737: ('ssi set "%V" "%V"', 'ngx_http_ssi_set', 482405), 691755: ('set: "%V"="%V"', 'ngx_http_ssi_set', 482551), 691770: ('ssi echo "%V"', 'ngx_http_ssi_echo', 482950), 691799: ('ssi include: "%V"', 'ngx_http_ssi_include', 484442), 691817: ('ssi stub output: "%V?%V"', 'ngx_http_ssi_stub_output', 485632), 691842: ('http ssi filter "%V?%V"', 'ngx_http_ssi_body_filter', 486528), 691866: ('http ssi filter wait "%V?%V"', 'ngx_http_ssi_body_filter', 486721), 691895: ('saved: %uz state: %ui', 'ngx_http_ssi_body_filter', 486793), 691917: ('parse: %i, looked: %uz %p-%p', 'ngx_http_ssi_body_filter', 490021), 691946: ('saved: %uz', 'ngx_http_ssi_body_filter', 490074), 691957: ('invalid SSI command: "%V"', 'ngx_http_ssi_body_filter', 491027), 692320: ('the using of the regex "%V" in SSI requires PCRE library', 'ngx_http_ssi_if', 482120), 692384: ('unknown encoding "%V" in the "echo" command', 'ngx_http_ssi_echo', 483400), 692432: ('inclusion may be either virtual="%V" or file="%V"', 'ngx_http_ssi_include', 483740), 692600: ('"wait" cannot be used with file="%V"', 'ngx_http_ssi_include', 484077), 692640: ('invalid value "%V" in the "wait" parameter', 'ngx_http_ssi_include', 484006), 692688: ('"stub"="%V" for "include" not found', 'ngx_http_ssi_include', 484684), 692776: ('http ssi filter wait "%V?%V" non-active', 'ngx_http_ssi_body_filter', 486594), 692816: ('http ssi filter wait "%V?%V" done', 'ngx_http_ssi_body_filter', 486640), 692856: ('the "%V%c..." SSI command is too long', 'ngx_http_ssi_body_filter', 487991), 692896: ('unexpected "-" symbol after "%V" parameter in "%V" SSI command', 'ngx_http_ssi_body_filter', 488345), 692960: ('too long "%V%c..." parameter in "%V" SSI command', 'ngx_http_ssi_body_filter', 488452), 693016: ('unexpected "%c" symbol after "%V" parameter in "%V" SSI command', 'ngx_http_ssi_body_filter', 488596), 693080: ('unexpected "%c" symbol before value of "%V" parameter in "%V" SSI command', 'ngx_http_ssi_body_filter', 488735), 693160: ('too long "%V%c..." value of "%V" parameter in "%V" SSI command', 'ngx_http_ssi_body_filter', 488882), 693224: ('unexpected "%c" symbol after "%V" value of "%V" parameter in "%V" SSI command', 'ngx_http_ssi_body_filter', 489396), 693304: ('unexpected "%c" symbol in "%V" SSI command', 'ngx_http_ssi_body_filter', 489478), 693352: ('invalid context of SSI command: "%V"', 'ngx_http_ssi_body_filter', 490959), 693392: ('too many SSI command parameters: "%V"', 'ngx_http_ssi_body_filter', 491596), 693432: ('duplicate "%V" parameter in "%V" SSI command', 'ngx_http_ssi_body_filter', 491958), 693480: ('invalid parameter name: "%V" in "%V" SSI command', 'ngx_http_ssi_body_filter', 491886), 693536: ('mandatory "%V" parameter is absent in "%V" SSI command', 'ngx_http_ssi_body_filter', 492283), 693856: ('http charset utf saved: %z', 'ngx_http_charset_body_filter', 498408), 693937: ('&#%uD;', 'ngx_http_charset_body_filter', 498729), 693971: ('charset: "%V" > "%V"', 'ngx_http_charset_header_filter', 500841), 694120: ('"charset_map" between the same charsets "%V" and "%V"', 'ngx_http_charset_map_block', 493758), 694176: ('duplicate "charset_map" between "%V" and "%V"', 'ngx_http_charset_map_block', 493835), 694224: ('no "charset_map" between the charsets "%V" and "%V"', 'ngx_http_charset_postconfiguration', 496133), 694280: ('unknown charset "%V" to override', 'ngx_http_charset_header_filter', 500412), 694330: ('uid cookie: "%V"', 'ngx_http_userid_get_uid', 502815), 694347: ('uid: %08XD%08XD%08XD%08XD', 'ngx_http_userid_get_uid', 502922), 694377: ('%V=%08XD%08XD%08XD%08XD', 'ngx_http_userid_variable', 504994), 694640: ('client sent too short userid cookie "%V"', 'ngx_http_userid_get_uid', 502780), 694688: ('client sent invalid userid cookie "%V"', 'ngx_http_userid_get_uid', 502981), 694728: ('userid cookie "%V=%08XD%08XD%08XD%08XD" was reset', 'ngx_http_userid_create_uid', 503310), 694872: ('max-age=%T', 'ngx_http_headers_filter', 507516), 695012: ('http copy filter: "%V?%V"', 'ngx_http_copy_filter', 509382), 695038: ('http copy filter: %i "%V?%V"', 'ngx_http_copy_filter', 509731), 695082: ('http im:"%V" etag:%V', 'ngx_http_test_if_match', 509998), 695103: ('http iums:%T lm:%T', 'ngx_http_not_modified_header_filter', 510589), 695122: ('http ims:%T lm:%T', 'ngx_http_not_modified_header_filter', 510813), 695140: ('http filename: "%s"', 'ngx_http_static_handler', 511544), 695160: ('http static fd: %d', 'ngx_http_static_handler', 512157), 695188: ('"%s" is not a regular file', 'ngx_http_static_handler', 512719), 695242: ('closedir() "%V" failed', 'ngx_http_autoindex_error', 513163), 695271: ('http autoindex: "%s"', 'ngx_http_autoindex_handler', 514495), 695318: ('readdir() "%V" failed', 'ngx_http_autoindex_handler', 515281), 695340: ('http autoindex file: "%s"', 'ngx_http_autoindex_handler', 515317), 695366: ('lstat() "%s" failed', 'ngx_http_autoindex_handler', 515954), 695386: ('%4d-%02d-%02dT%02d:%02d:%02dZ', 'ngx_http_autoindex_handler', 516893), 695416: ('%02d-%s-%d %02d:%02d ', 'ngx_http_autoindex_handler', 518948), 695438: ('%19O', 'ngx_http_autoindex_handler', 518400), 695443: (' %6i', 'ngx_http_autoindex_handler', 519167), 695448: ('%6i%c', 'ngx_http_autoindex_handler', 518514), 695528: ('client sent too long callback name: "%V"', 'ngx_http_autoindex_handler', 514639), 695576: ('client sent invalid callback name: "%V"', 'ngx_http_autoindex_handler', 514673), 695627: ('open index "%V"', 'ngx_http_index_handler', 521183), 695643: ('"%s" is forbidden', 'ngx_http_index_handler', 521362), 695661: ('"%s" is not found', 'ngx_http_index_handler', 521307), 695679: ('http index check dir: "%V"', 'ngx_http_index_handler', 521742), 695706: ('"%s" is not a directory', 'ngx_http_index_handler', 521912), 695800: ('index "%V" in "index" directive is invalid', 'ngx_http_index_set_index', 519809), 695885: ('invalid code "%*s"', 'ngx_http_try_files', 523906), 695922: ('trying to use %s: "%s" "%s"', 'ngx_http_try_files_handler', 524716), 695950: ('try file uri: "%V"', 'ngx_http_try_files_handler', 525289), 695979: ('rc: %i user: "%V" salt: "%s"', 'ngx_http_auth_basic_crypt_handler', 526217), 696008: ('encrypted: "%s"', 'ngx_http_auth_basic_crypt_handler', 526256), 696024: ('user "%V": password mismatch', 'ngx_http_auth_basic_crypt_handler', 526295), 696144: ('user "%V" was not found in "%s"', 'ngx_http_auth_basic_handler', 527571), 696176: ('access: %08XD %08XD %08XD', 'ngx_http_access_inet', 528037), 696202: ('access: %*s %*s %*s', 'ngx_http_access_handler', 528501), 696233: (' in limit_conn_zone "%V"%Z', 'ngx_http_limit_conn_init_zone', 530617), 696260: ('limit conn cleanup: %08Xi %d', 'ngx_http_limit_conn_cleanup', 530895), 696289: ('invalid zone size "%V"', 'ngx_http_limit_conn_zone', 531523), 696323: ('limit conn: %08Xi %d', 'ngx_http_limit_conn_handler', 532518), 696464: ('invalid number of connections "%V"', 'ngx_http_limit_conn', 530142), 696544: ('limit_conn_zone "%V" uses the "%V" key while previously it used the "%V" key', 'ngx_http_limit_conn_init_zone', 530417), 696624: ('"%V" must have "zone" parameter', 'ngx_http_limit_conn_zone', 531721), 696656: ('%V "%V" is already bound to key "%V"', 'ngx_http_limit_conn_zone', 531477), 696696: ('the value of the "%V" key is more than 255 bytes: "%V"', 'ngx_http_limit_conn_handler', 532938), 696752: ('limiting connections%s by zone "%V"', 'ngx_http_limit_conn_handler', 532352), 696795: ('invalid burst value "%V"', 'ngx_http_limit_req', 533749), 696827: ('invalid delay value "%V"', 'ngx_http_limit_req', 533822), 696852: (' in limit_req zone "%V"%Z', 'ngx_http_limit_req_init_zone', 534574), 696904: ('limit_req[%ui]: %i %ui.%03ui', 'ngx_http_limit_req_handler', 536543), 696947: ('invalid rate "%V"', 'ngx_http_limit_req_zone', 539064), 697072: ('limit_req "%V" uses the "%V" key while previously it used the "%V" key', 'ngx_http_limit_req_init_zone', 534351), 697144: ('the value of the "%V" key is more than 65535 bytes: "%V"', 'ngx_http_limit_req_handler', 535978), 697208: ('limiting requests%s, excess: %ui.%03ui by zone "%V"', 'ngx_http_limit_req_handler', 536808), 697264: ('delaying request%s, excess: %ui.%03ui, by zone "%V"', 'ngx_http_limit_req_handler', 537087), 697316: ('http geo started: %V', 'ngx_http_geo_addr', 539610), 697356: ('http geo started: %v', 'ngx_http_geo_addr', 539697), 697377: ('http geo: %v', 'ngx_http_geo_cidr_variable', 540000), 697406: ('invalid network "%V"', 'ngx_http_geo_cidr_value', 540437), 697427: ('invalid variable name "%V"', 'ngx_http_geo_block', 541259), 697454: ('%V.bin%Z', 'ngx_http_geo_block', 541899), 697498: ('invalid range "%V"', 'ngx_http_geo', 545769), 697517: ('no network "%V" to delete', 'ngx_http_geo', 547738), 697552: ('creating binary geo range base "%s"', 'ngx_http_geo_block', 542068), 697592: ('duplicate network "%V", value: "%v", old value: "%v"', 'ngx_http_geo_cidr_add', 543096), 697760: ('binary geo range base "%s" cannot be mixed with usual entries', 'ngx_http_geo', 544630), 697824: ('second binary geo range base "%s" cannot be mixed with "%s"', 'ngx_http_geo', 544674), 697888: ('stale binary geo range base "%s"', 'ngx_http_geo', 544820), 697928: ('pread() "%s" returned only %z bytes instead of %z', 'ngx_http_geo', 545033), 697984: ('incompatible binary geo range base "%s"', 'ngx_http_geo', 545077), 698024: ('CRC32 mismatch in binary geo range base "%s"', 'ngx_http_geo', 545219), 698072: ('using binary geo range base "%s"', 'ngx_http_geo', 545361), 698112: ('duplicate default geo range value: "%V", old value: "%v"', 'ngx_http_geo', 543644), 698176: ('no address range "%V" to delete', 'ngx_http_geo', 546183), 698208: ('duplicate range "%V", value: "%v", old value: "%v"', 'ngx_http_geo', 546369), 698264: ('range "%V" overlaps "%d.%d.%d.%d-%d.%d.%d.%d"', 'ngx_http_geo', 547104), 698327: ('http map: "%V" "%v"', 'ngx_http_map_variable', 548619), 698375: ('conflicting parameter "%V"', 'ngx_http_map', 550935), 698520: ('invalid hostname or wildcard "%V"', 'ngx_http_map', 551001), 698554: ('invalid percent value "%V"', 'ngx_http_split_clients', 551173), 698581: ('http split: %uD %uD', 'ngx_http_split_clients_variable', 551519), 698616: ('percent total is greater than 100%%', 'ngx_conf_split_clients_block', 552193), 698656: ('the using of the regex "%V" requires PCRE library', 'ngx_http_valid_referers', 553066), 698819: ('invalid referer "%V"', 'ngx_http_valid_referers', 552788), 699059: ('http proxy out buf %p %z', 'ngx_http_proxy_non_buffered_chunked_filter', 558804), 699084: ('input buf #%d %p', 'ngx_http_proxy_chunked_filter', 559543), 699101: ('input buf %p %z', 'ngx_http_proxy_chunked_filter', 560115), 699158: ('http proxy header: "%V: %V"', 'ngx_http_proxy_process_header', 562532), 699209: ('http proxy status %ui "%V"', 'ngx_http_proxy_process_status_line', 563863), 699276: ('proxy output chunk: %O', 'ngx_http_proxy_body_output_filter', 565121), 699343: ('http proxy header:%N"%*s"', 'ngx_http_proxy_create_request', 570735), 699369: ('invalid URL prefix in "%V"', 'ngx_http_proxy_handler', 572350), 700856: ('http proxy filter init s:%ui h:%d c:%d l:%O', 'ngx_http_proxy_input_filter_init', 557358), 700984: ('http proxy chunked state %ui, length %O', 'ngx_http_proxy_chunked_filter', 560217), 701024: ('invalid proxy_cookie_flags flag "%V"', 'ngx_http_proxy_rewrite_cookie', 561224), 701064: ('upstream sent invalid header: "%*s\\x%02xd..."', 'ngx_http_proxy_process_header', 562982), 702064: ('"proxy_cache" zone "%V" is unknown', 'ngx_http_proxy_merge_loc_conf', 576322), 702352: ('http fastcgi record byte: %02Xd', 'ngx_http_fastcgi_process_record', 581252), 702384: ('upstream sent unsupported FastCGI protocol version: %d', 'ngx_http_fastcgi_process_record', 581329), 702440: ('upstream sent invalid FastCGI record type: %d', 'ngx_http_fastcgi_process_record', 581430), 702488: ('upstream sent unexpected FastCGI request id high byte: %d', 'ngx_http_fastcgi_process_record', 581513), 702552: ('upstream sent unexpected FastCGI request id low byte: %d', 'ngx_http_fastcgi_process_record', 581594), 702616: ('http fastcgi record length: %z', 'ngx_http_fastcgi_process_record', 581797), 702744: ('upstream sent unexpected FastCGI record: %ui', 'ngx_http_fastcgi_process_header', 586222), 702840: ('upstream sent invalid status "%V"', 'ngx_http_fastcgi_process_header', 587642), 702928: ('fastcgi output in  l:%d f:%d %p, pos %p, size: %z file: %O, size: %O', 'ngx_http_fastcgi_body_output_filter', 588584), 703000: ('fastcgi output out l:%d f:%d %p, pos %p, size: %z file: %O, size: %O', 'ngx_http_fastcgi_body_output_filter', 589410), 703152: ('fastcgi request record is too big: %uz', 'ngx_http_fastcgi_create_request', 592414), 703848: ('"fastcgi_cache" zone "%V" is unknown', 'ngx_http_fastcgi_merge_loc_conf', 599655), 704000: ('"%V" requires PCRE library', 'ngx_http_fastcgi_split_path_info', 580457), 704119: ('FastCGI sent in stderr: "%*s"', 'ngx_http_fastcgi_non_buffered_filter', 582858), 704149: ('http fastcgi output buf %p', 'ngx_http_fastcgi_non_buffered_filter', 583006), 704236: ('http fastcgi parser: %i', 'ngx_http_fastcgi_process_header', 586942), 704260: ('http fastcgi header: "%V: %V"', 'ngx_http_fastcgi_process_header', 587429), 704359: ('fastcgi param: "%*s: %*s"', 'ngx_http_fastcgi_create_request', 592895), 705703: ('http uwsgi header: "%V: %V"', 'ngx_http_uwsgi_process_header', 601620), 705754: ('http uwsgi status %ui "%V"', 'ngx_http_uwsgi_process_status_line', 602786), 705791: ('uwsgi request is too big: %uz', 'ngx_http_uwsgi_create_request', 605548), 705821: ('uwsgi param: "%*s: %*s"', 'ngx_http_uwsgi_create_request', 605981), 706832: ('http uwsgi filter init s:%ui l:%O', 'ngx_http_uwsgi_input_filter_init', 601369), 707624: ('"uwsgi_cache" zone "%V" is unknown', 'ngx_http_uwsgi_merge_loc_conf', 611962), 707759: ('http scgi header: "%V: %V"', 'ngx_http_scgi_process_header', 613910), 707808: ('http scgi status %ui "%V"', 'ngx_http_scgi_process_status_line', 615076), 707834: ('%ui:CONTENT_LENGTH%Z%V%Z', 'ngx_http_scgi_create_request', 617571), 707859: ('scgi param: "%s: %s"', 'ngx_http_scgi_create_request', 618025), 708784: ('http scgi filter init s:%ui l:%O', 'ngx_http_scgi_input_filter_init', 613659), 709520: ('"scgi_cache" zone "%V" is unknown', 'ngx_http_scgi_merge_loc_conf', 623611), 709639: ('memcached: "%V"', 'ngx_http_memcached_process_header', 626514), 709667: ('http memcached request: "%V"', 'ngx_http_memcached_create_request', 627653), 710016: ('memcached filter bytes:%z size:%z length:%O rest:%z', 'ngx_http_memcached_filter', 626021), 710072: ('memcached sent invalid key in response "%V" for key "%V"', 'ngx_http_memcached_process_header', 626576), 710136: ('memcached sent invalid flags in response "%V" for key "%V"', 'ngx_http_memcached_process_header', 626852), 710200: ('memcached sent invalid length in response "%V" for key "%V"', 'ngx_http_memcached_process_header', 626919), 710264: ('key: "%V" was not found by memcached', 'ngx_http_memcached_process_header', 627120), 710304: ('memcached sent invalid response: "%V"', 'ngx_http_memcached_process_header', 627001), 710453: ('unknown browser name "%V"', 'ngx_http_modern_browser', 629056), 710479: ('invalid browser version "%V"', 'ngx_http_modern_browser', 629298), 710508: ('browser: "%s"', 'ngx_http_browser_variable', 630152), 710522: ('version: "%ui" "%s"', 'ngx_http_browser_variable', 630194), 710542: ('version: "%ui" "%ui"', 'ngx_http_browser_variable', 630367), 710656: ('get consistent hash peer, try: %ui', 'ngx_http_upstream_get_chash_peer', 631107), 710696: ('consistent hash peer:%uD, server:"%V"', 'ngx_http_upstream_get_chash_peer', 631190), 710768: ('get hash peer, value:%uD, peer:%ui', 'ngx_http_upstream_get_hash_peer', 633697), 710803: ('upstream hash key:"%V"', 'ngx_http_upstream_init_hash_peer', 631991), 710837: ('get hash peer, try: %ui', 'ngx_http_upstream_get_hash_peer', 633505), 710864: ('get ip hash peer, hash: %ui %04XL', 'ngx_http_upstream_get_ip_hash_peer', 634900), 710898: ('get ip hash peer, try: %ui', 'ngx_http_upstream_get_ip_hash_peer', 634808), 711049: ('get least conn peer, try: %ui', 'ngx_http_upstream_get_least_conn_peer', 636000), 711120: ('get random peer, try: %ui', 'ngx_http_upstream_get_random_peer', 637325), 711146: ('get random2 peer, try: %ui', 'ngx_http_upstream_get_random2_peer', 637977), 711328: ('invalid value "%V" in "%V" directive', 'ngx_http_upstream_keepalive', 639189), 711368: ('get keepalive peer: using connection %p', 'ngx_http_upstream_get_keepalive_peer', 640567), 711408: ('free keepalive peer: saving connection %p', 'ngx_http_upstream_free_keepalive_peer', 641181), 711450: ('invalid zone name "%V"', 'ngx_http_upstream_zone', 641888), 711473: (' in upstream zone "%V"%Z', 'ngx_http_upstream_init_zone', 642619)}


Format String Mappings:

Log: 2024/11/21 13:46:06 [debug] 687715#0: bind() 0.0.0.0:8080 #6
LEA instruction address: 0x29f80
Function: ngx_open_listening_sockets
Format string: bind() %V #%d 
Concrete values: {'par_1': {'fmt': '%V', 'val': '0.0.0.0:8080'}, 'par_2': {'fmt': '%d', 'val': '6'}}

Log: 2024/11/21 13:46:06 [notice] 687715#0: using the "epoll" event method
LEA instruction address: 0x3acaa
Function: ngx_event_module_init
Format string: using the "%s" event method
Concrete values: {'par_1': {'fmt': '%s', 'val': 'epoll'}}

Log: 2024/11/21 13:46:06 [debug] 687715#0: write: 7, 00007FFFFFFFE1B0, 7, 0
LEA instruction address: 0x403f4
Function: ngx_write_file
Format string: write: %d, %p, %uz, %O
Concrete values: {'par_1': {'fmt': '%d', 'val': '7'}, 'par_2': {'fmt': '%p', 'val': '00007FFFFFFFE1B0'}, 'par_3': {'fmt': '%uz', 'val': '7'}, 'par_4': {'fmt': '%O', 'val': '0'}}

Log: 2024/11/21 13:46:06 [debug] 687715#0: add cleanup: 000055555566F400
LEA instruction address: 0x1b848
Function: ngx_pool_cleanup_add
Format string: add cleanup: %p
Concrete values: {'par_1': {'fmt': '%p', 'val': '000055555566F400'}}

Log: 2024/11/21 13:46:06 [debug] 687715#0: malloc: 0000555555647480:8
LEA instruction address: 0x401ee
Function: ngx_alloc
Format string: malloc: %p:%uz
Concrete values: {'par_1': {'fmt': '%p', 'val': '0000555555647480'}, 'par_2': {'fmt': '%uz', 'val': '8'}}

Log: 2024/11/21 13:46:06 [debug] 687715#0: notify eventfd: 7
LEA instruction address: 0x4708a
Function: ngx_epoll_init
Format string: notify eventfd: %d
Concrete values: {'par_1': {'fmt': '%d', 'val': '7'}}

Log: 2024/11/21 13:46:06 [debug] 687715#0: testing the EPOLLRDHUP flag: success
LEA instruction address: 0x46fed
Function: ngx_epoll_init
Format string: testing the EPOLLRDHUP flag: %s
Concrete values: {'par_1': {'fmt': '%s', 'val': 'success'}}

Log: 2024/11/21 13:46:06 [debug] 687715#0: malloc: 0000555555652220:6144
LEA instruction address: 0x401ee
Function: ngx_alloc
Format string: malloc: %p:%uz
Concrete values: {'par_1': {'fmt': '%p', 'val': '0000555555652220'}, 'par_2': {'fmt': '%uz', 'val': '6144'}}

Log: 2024/11/21 13:46:06 [debug] 687715#0: malloc: 0000555555653A30:3584
LEA instruction address: 0x401ee
Function: ngx_alloc
Format string: malloc: %p:%uz
Concrete values: {'par_1': {'fmt': '%p', 'val': '0000555555653A30'}, 'par_2': {'fmt': '%uz', 'val': '3584'}}

Log: 2024/11/21 13:46:06 [debug] 687715#0: malloc: 0000555555650190:1536
LEA instruction address: 0x401ee
Function: ngx_alloc
Format string: malloc: %p:%uz
Concrete values: {'par_1': {'fmt': '%p', 'val': '0000555555650190'}, 'par_2': {'fmt': '%uz', 'val': '1536'}}

Log: 2024/11/21 13:46:06 [debug] 687715#0: malloc: 0000555555654840:1536
LEA instruction address: 0x401ee
Function: ngx_alloc
Format string: malloc: %p:%uz
Concrete values: {'par_1': {'fmt': '%p', 'val': '0000555555654840'}, 'par_2': {'fmt': '%uz', 'val': '1536'}}

Log: 2024/11/21 13:46:06 [debug] 687715#0: epoll add event: fd:6 op:1 ev:00002001
LEA instruction address: 0x46bc2
Function: ngx_epoll_add_event
Format string: epoll add event: fd:%d op:%d ev:%08XD
Concrete values: {'par_1': {'fmt': '%d', 'val': '6'}, 'par_2': {'fmt': '%d', 'val': '1'}, 'par_3': {'fmt': '%08XD', 'val': '00002001'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: epoll: fd:6 ev:0001 d:0000555555653A30
LEA instruction address: 0x47561
Function: ngx_epoll_process_events
Format string: epoll: fd:%d ev:%04XD d:%p
Concrete values: {'par_1': {'fmt': '%d', 'val': '6'}, 'par_2': {'fmt': '%04XD', 'val': '0001'}, 'par_3': {'fmt': '%p', 'val': '0000555555653A30'}}



---> above is initialization



Log: 2024/11/21 13:46:14 [debug] 687715#0: accept on 0.0.0.0:8080, ready: 0
LEA instruction address: 0x3c5d5
Function: ngx_event_accept
Format string: accept on %V, ready: %d
Concrete values: {'par_1': {'fmt': '%V', 'val': '0.0.0.0:8080'}, 'par_2': {'fmt': '%d', 'val': '0'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: posix_memalign: 00005555556507A0:512 @16
LEA instruction address: 0x402e0
Function: ngx_memalign
Format string: posix_memalign: %p:%uz @%uz
Concrete values: {'par_1': {'fmt': '%p', 'val': '00005555556507A0'}, 'par_2': {'fmt': '%uz', 'val': '512'}, 'par_3': {'fmt': '%uz', 'val': '16'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 event timer add: 8: 60000:1215706384
LEA instruction address: 0x2b8db
Function: ngx_clean_old_cycles
Format string: event timer add: %d: %M:%M
Concrete values: {'par_1': {'fmt': '%d', 'val': '8'}, 'par_2': {'fmt': '%M', 'val': '60000'}, 'par_3': {'fmt': '%M', 'val': '1215706384'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 reusable connection: 1
LEA instruction address: 0x2af23
Function: ngx_reusable_connection
Format string: reusable connection: %ui
Concrete values: {'par_1': {'fmt': '%ui', 'val': '1'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 epoll add event: fd:8 op:1 ev:80002001
LEA instruction address: 0x46bc2
Function: ngx_epoll_add_event
Format string: epoll add event: fd:%d op:%d ev:%08XD
Concrete values: {'par_1': {'fmt': '%d', 'val': '8'}, 'par_2': {'fmt': '%d', 'val': '1'}, 'par_3': {'fmt': '%08XD', 'val': '80002001'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: epoll: fd:8 ev:0001 d:0000555555653B10
LEA instruction address: 0x47561
Function: ngx_epoll_process_events
Format string: epoll: fd:%d ev:%04XD d:%p
Concrete values: {'par_1': {'fmt': '%d', 'val': '8'}, 'par_2': {'fmt': '%04XD', 'val': '0001'}, 'par_3': {'fmt': '%p', 'val': '0000555555653B10'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 malloc: 0000555555646570:1024
LEA instruction address: 0x401ee
Function: ngx_alloc
Format string: malloc: %p:%uz
Concrete values: {'par_1': {'fmt': '%p', 'val': '0000555555646570'}, 'par_2': {'fmt': '%uz', 'val': '1024'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 recv: eof:0, avail:-1
LEA instruction address: 0x40f9e
Function: ngx_unix_recv
Format string: recv: eof:%d, avail:%d
Concrete values: {'par_1': {'fmt': '%d', 'val': '0'}, 'par_2': {'fmt': '%d', 'val': '-1'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 recv: fd:8 88 of 1024
LEA instruction address: 0x40f50
Function: ngx_unix_recv
Format string: recv: fd:%d %z of %uz
Concrete values: {'par_1': {'fmt': '%d', 'val': '8'}, 'par_2': {'fmt': '%z', 'val': '88'}, 'par_3': {'fmt': '%uz', 'val': '1024'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 reusable connection: 0
LEA instruction address: 0x2af23
Function: ngx_reusable_connection
Format string: reusable connection: %ui
Concrete values: {'par_1': {'fmt': '%ui', 'val': '0'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 posix_memalign: 000055555564BD70:4096 @16
LEA instruction address: 0x402e0
Function: ngx_memalign
Format string: posix_memalign: %p:%uz @%uz
Concrete values: {'par_1': {'fmt': '%p', 'val': '000055555564BD70'}, 'par_2': {'fmt': '%uz', 'val': '4096'}, 'par_3': {'fmt': '%uz', 'val': '16'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 http request line: "GET /index.html HTTP/1.1"
LEA instruction address: 0x55c40
Function: ngx_http_process_request_line
Format string: http request line: "%V"
Concrete values: {'par_1': {'fmt': '%V', 'val': 'GET /index.html HTTP/1.1'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 http uri: "/index.html"
LEA instruction address: 0x55169
Function: ngx_http_process_request_uri
Format string: http uri: "%V"
Concrete values: {'par_1': {'fmt': '%V', 'val': '/index.html'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 http args: ""
LEA instruction address: 0x5519c
Function: ngx_http_process_request_uri
Format string: http args: "%V"
Concrete values: {'par_1': {'fmt': '%V', 'val': ''}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 http exten: "html"
LEA instruction address: 0x551cf
Function: ngx_http_process_request_uri
Format string: http exten: "%V"
Concrete values: {'par_1': {'fmt': '%V', 'val': 'html'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 posix_memalign: 000055555564CD80:4096 @16
LEA instruction address: 0x402e0
Function: ngx_memalign
Format string: posix_memalign: %p:%uz @%uz
Concrete values: {'par_1': {'fmt': '%p', 'val': '000055555564CD80'}, 'par_2': {'fmt': '%uz', 'val': '4096'}, 'par_3': {'fmt': '%uz', 'val': '16'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 http header: "Host: localhost:8080"
LEA instruction address: 0x556f2
Function: ngx_http_process_request_headers
Format string: http header: "%V: %V"
Concrete values: {'par_1': {'fmt': '%V', 'val': 'Host'}, 'par_2': {'fmt': '%V', 'val': 'localhost:8080'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 http header: "User-Agent: curl/7.81.0"
LEA instruction address: 0x556f2
Function: ngx_http_process_request_headers
Format string: http header: "%V: %V"
Concrete values: {'par_1': {'fmt': '%V', 'val': 'User-Agent'}, 'par_2': {'fmt': '%V', 'val': 'curl/7.81.0'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 http header: "Accept: */*"
LEA instruction address: 0x556f2
Function: ngx_http_process_request_headers
Format string: http header: "%V: %V"
Concrete values: {'par_1': {'fmt': '%V', 'val': 'Accept'}, 'par_2': {'fmt': '%V', 'val': '*/*'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 event timer del: 8: 1215706384
LEA instruction address: 0x2b06c
Function: ngx_close_connection
Format string: event timer del: %d: %M
Concrete values: {'par_1': {'fmt': '%d', 'val': '8'}, 'par_2': {'fmt': '%M', 'val': '1215706384'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 test location: "/"
LEA instruction address: 0x5078d
Function: ngx_http_named_location
Format string: test location: "%V"
Concrete values: {'par_1': {'fmt': '%V', 'val': '/'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 using configuration "/"
LEA instruction address: 0x4f014
Function: ngx_http_core_find_config_phase
Format string: using configuration "%s%V"
Concrete values: {'par_1': {'fmt': '%s', 'val': '/'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 generic phase: 1
LEA instruction address: 0x4e8dc
Function: ngx_http_core_generic_phase
Format string: generic phase: %ui
Concrete values: {'par_1': {'fmt': '%ui', 'val': '1'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 generic phase: 2
LEA instruction address: 0x4e8dc
Function: ngx_http_core_generic_phase
Format string: generic phase: %ui
Concrete values: {'par_1': {'fmt': '%ui', 'val': '2'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 post access phase: 5
LEA instruction address: 0x4ecd1
Function: ngx_http_core_post_access_phase
Format string: post access phase: %ui
Concrete values: {'par_1': {'fmt': '%ui', 'val': '5'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 generic phase: 6
LEA instruction address: 0x4e8dc
Function: ngx_http_core_generic_phase
Format string: generic phase: %ui
Concrete values: {'par_1': {'fmt': '%ui', 'val': '6'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 generic phase: 7
LEA instruction address: 0x4e8dc
Function: ngx_http_core_generic_phase
Format string: generic phase: %ui
Concrete values: {'par_1': {'fmt': '%ui', 'val': '7'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 content phase: 8
LEA instruction address: 0x4fc38
Function: ngx_http_core_content_phase
Format string: content phase: %ui
Concrete values: {'par_1': {'fmt': '%ui', 'val': '8'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 content phase: 9
LEA instruction address: 0x4fc38
Function: ngx_http_core_content_phase
Format string: content phase: %ui
Concrete values: {'par_1': {'fmt': '%ui', 'val': '9'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 content phase: 10
LEA instruction address: 0x4fc38
Function: ngx_http_core_content_phase
Format string: content phase: %ui
Concrete values: {'par_1': {'fmt': '%ui', 'val': '10'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 http filename: "/usr/local/nginx/html/index.html"
LEA instruction address: 0x7ce38
Function: ngx_http_static_handler
Format string: http filename: "%s"
Concrete values: {'par_1': {'fmt': '%s', 'val': '/usr/local/nginx/html/index.html'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 add cleanup: 000055555564CC98
LEA instruction address: 0x1b848
Function: ngx_pool_cleanup_add
Format string: add cleanup: %p
Concrete values: {'par_1': {'fmt': '%p', 'val': '000055555564CC98'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 http static fd: 9
LEA instruction address: 0x7d09d
Function: ngx_http_static_handler
Format string: http static fd: %d
Concrete values: {'par_1': {'fmt': '%d', 'val': '9'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 http script var: "6423f7b42d700181004ab12b5c090b2a"
LEA instruction address: 0x625f5
Function: ngx_http_script_var_code
Format string: http script var: "%v"
Concrete values: {}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 http script var: "1"
LEA instruction address: 0x625f5
Function: ngx_http_script_var_code
Format string: http script var: "%v"
Concrete values: {}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 http script var: "1"
LEA instruction address: 0x625f5
Function: ngx_http_script_var_code
Format string: http script var: "%v"
Concrete values: {}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 write new buf t:1 f:0 000055555564D360, pos 000055555564D360, size: 347 file: 0, size: 0
LEA instruction address: 0x71502
Function: ngx_http_write_filter
Format string: write new buf t:%d f:%d %p, pos %p, size: %z file: %O, size: %O
Concrete values: {'par_1': {'fmt': '%d', 'val': '1'}, 'par_2': {'fmt': '%d', 'val': '0'}, 'par_3': {'fmt': '%p', 'val': '000055555564D360'}, 'par_4': {'fmt': '%p', 'val': '000055555564D360'}, 'par_5': {'fmt': '%z', 'val': '347'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 http write filter: l:0 f:0 s:347
LEA instruction address: 0x71817
Function: ngx_http_write_filter
Format string: http write filter: l:%ui f:%ui s:%O
Concrete values: {'par_1': {'fmt': '%ui', 'val': '0'}, 'par_2': {'fmt': '%ui', 'val': '0'}, 'par_3': {'fmt': '%O', 'val': '347'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 http output filter "/index.html?"
LEA instruction address: 0x4f73b
Function: ngx_http_output_filter
Format string: http output filter "%V?%V"
Concrete values: {'par_1': {'fmt': '%V', 'val': '/index.html'}, 'par_2': {'fmt': '%V', 'val': ''}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 http copy filter: "/index.html?"
LEA instruction address: 0x7c5c6
Function: ngx_http_copy_filter
Format string: http copy filter: "%V?%V"
Concrete values: {'par_1': {'fmt': '%V', 'val': '/index.html'}, 'par_2': {'fmt': '%V', 'val': ''}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 read: 9, 000055555564D5A8, 615, 0
LEA instruction address: 0x40365
Function: ngx_read_file
Format string: read: %d, %p, %uz, %O
Concrete values: {'par_1': {'fmt': '%d', 'val': '9'}, 'par_2': {'fmt': '%p', 'val': '000055555564D5A8'}, 'par_3': {'fmt': '%uz', 'val': '615'}, 'par_4': {'fmt': '%O', 'val': '0'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 http postpone filter "/index.html?" 000055555564D810
LEA instruction address: 0x743a0
Function: ngx_http_postpone_filter
Format string: http postpone filter "%V?%V" %p
Concrete values: {'par_1': {'fmt': '%V', 'val': '/index.html'}, 'par_2': {'fmt': '%V', 'val': ''}, 'par_3': {'fmt': '%p', 'val': '000055555564D810'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 write old buf t:1 f:0 000055555564D360, pos 000055555564D360, size: 347 file: 0, size: 0
LEA instruction address: 0x3e3d6
Function: ngx_event_pipe_write_chain_to_temp_file
Format string: pipe buf ls:%d %p, pos %p, size: %z
Concrete values: {'par_1': {'fmt': '%d', 'val': '1'}, 'par_2': {'fmt': '%p', 'val': '000055555564D360'}, 'par_3': {'fmt': '%p', 'val': '000055555564D360'}, 'par_4': {'fmt': '%z', 'val': '347'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 write new buf t:1 f:0 000055555564D5A8, pos 000055555564D5A8, size: 615 file: 0, size: 0
LEA instruction address: 0x71502
Function: ngx_http_write_filter
Format string: write new buf t:%d f:%d %p, pos %p, size: %z file: %O, size: %O
Concrete values: {'par_1': {'fmt': '%d', 'val': '1'}, 'par_2': {'fmt': '%d', 'val': '0'}, 'par_3': {'fmt': '%p', 'val': '000055555564D5A8'}, 'par_4': {'fmt': '%p', 'val': '000055555564D5A8'}, 'par_5': {'fmt': '%z', 'val': '615'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 http write filter: l:1 f:0 s:962
LEA instruction address: 0x71817
Function: ngx_http_write_filter
Format string: http write filter: l:%ui f:%ui s:%O
Concrete values: {'par_1': {'fmt': '%ui', 'val': '1'}, 'par_2': {'fmt': '%ui', 'val': '0'}, 'par_3': {'fmt': '%O', 'val': '962'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 http write filter limit 2097152
LEA instruction address: 0x71c0d
Function: ngx_http_write_filter
Format string: http write filter %p
Concrete values: {}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 writev: 962 of 962
LEA instruction address: 0x405e0
Function: ngx_write_chain_to_file
Format string: writev: %d, %uz, %O
Concrete values: {'par_1': {'fmt': '%d', 'val': '962'}, 'par_2': {'fmt': '%uz', 'val': '962'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 http write filter 0000000000000000
LEA instruction address: 0x71c0d
Function: ngx_http_write_filter
Format string: http write filter %p
Concrete values: {'par_1': {'fmt': '%p', 'val': '0000000000000000'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 http finalize request: 0, "/index.html?" a:1, c:1
LEA instruction address: 0x3703d
Function: ngx_close_cached_file
Format string: close cached open file: %s, fd:%d, c:%d, u:%d, %d
Concrete values: {'par_1': {'fmt': '%s', 'val': '/index.html?'}, 'par_2': {'fmt': '%d', 'val': '0'}, 'par_3': {'fmt': '%d', 'val': '1'}, 'par_4': {'fmt': '%d', 'val': '1'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: event timer add: 1432023124: 1000:1215647384
LEA instruction address: 0x2b8db
Function: ngx_clean_old_cycles
Format string: event timer add: %d: %M:%M
Concrete values: {'par_1': {'fmt': '%d', 'val': '1432023124'}, 'par_2': {'fmt': '%M', 'val': '1000'}, 'par_3': {'fmt': '%M', 'val': '1215647384'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 run cleanup: 000055555564CC98
LEA instruction address: 0x1b4a9
Function: ngx_destroy_pool
Format string: run cleanup: %p
Concrete values: {'par_1': {'fmt': '%p', 'val': '000055555564CC98'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 file cleanup: fd:9
LEA instruction address: 0x1b30e
Function: ngx_pool_cleanup_file
Format string: file cleanup: fd:%d
Concrete values: {'par_1': {'fmt': '%d', 'val': '9'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 free: 000055555564BD70, unused: 1
LEA instruction address: 0x1b536
Function: ngx_destroy_pool
Format string: free: %p, unused: %uz
Concrete values: {'par_1': {'fmt': '%p', 'val': '000055555564BD70'}, 'par_2': {'fmt': '%uz', 'val': '1'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 free: 000055555564CD80, unused: 1160
LEA instruction address: 0x1b536
Function: ngx_destroy_pool
Format string: free: %p, unused: %uz
Concrete values: {'par_1': {'fmt': '%p', 'val': '000055555564CD80'}, 'par_2': {'fmt': '%uz', 'val': '1160'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 free: 0000555555646570
LEA instruction address: 0x1b536
Function: ngx_destroy_pool
Format string: free: %p, unused: %uz
Concrete values: {}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 hc free: 0000000000000000
LEA instruction address: 0x541c2
Function: ngx_http_finalize_connection
Format string: hc free: %p
Concrete values: {'par_1': {'fmt': '%p', 'val': '0000000000000000'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 hc busy: 0000000000000000 0
LEA instruction address: 0x541f7
Function: ngx_http_finalize_connection
Format string: hc busy: %p %i
Concrete values: {'par_1': {'fmt': '%p', 'val': '0000000000000000'}, 'par_2': {'fmt': '%i', 'val': '0'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 reusable connection: 1
LEA instruction address: 0x2af23
Function: ngx_reusable_connection
Format string: reusable connection: %ui
Concrete values: {'par_1': {'fmt': '%ui', 'val': '1'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 event timer add: 8: 75000:1215721384
LEA instruction address: 0x2b8db
Function: ngx_clean_old_cycles
Format string: event timer add: %d: %M:%M
Concrete values: {'par_1': {'fmt': '%d', 'val': '8'}, 'par_2': {'fmt': '%M', 'val': '75000'}, 'par_3': {'fmt': '%M', 'val': '1215721384'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: epoll: fd:8 ev:2001 d:0000555555653B10
LEA instruction address: 0x47561
Function: ngx_epoll_process_events
Format string: epoll: fd:%d ev:%04XD d:%p
Concrete values: {'par_1': {'fmt': '%d', 'val': '8'}, 'par_2': {'fmt': '%04XD', 'val': '2001'}, 'par_3': {'fmt': '%p', 'val': '0000555555653B10'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 malloc: 0000555555646570:1024
LEA instruction address: 0x401ee
Function: ngx_alloc
Format string: malloc: %p:%uz
Concrete values: {'par_1': {'fmt': '%p', 'val': '0000555555646570'}, 'par_2': {'fmt': '%uz', 'val': '1024'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 recv: eof:1, avail:-1
LEA instruction address: 0x40f9e
Function: ngx_unix_recv
Format string: recv: eof:%d, avail:%d
Concrete values: {'par_1': {'fmt': '%d', 'val': '1'}, 'par_2': {'fmt': '%d', 'val': '-1'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 recv: fd:8 0 of 1024
LEA instruction address: 0x40f50
Function: ngx_unix_recv
Format string: recv: fd:%d %z of %uz
Concrete values: {'par_1': {'fmt': '%d', 'val': '8'}, 'par_2': {'fmt': '%z', 'val': '0'}, 'par_3': {'fmt': '%uz', 'val': '1024'}}

Log: 2024/11/21 13:46:14 [info] 687715#0: *1 client 127.0.0.1 closed keepalive connection
LEA instruction address: 0x569db
Function: ngx_http_keepalive_handler
Format string: client %V closed keepalive connection
Concrete values: {'par_1': {'fmt': '%V', 'val': '127.0.0.1'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 close http connection: 8
LEA instruction address: 0x52c8e
Function: ngx_http_close_connection
Format string: close http connection: %d
Concrete values: {'par_1': {'fmt': '%d', 'val': '8'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 event timer del: 8: 1215721384
LEA instruction address: 0x2b06c
Function: ngx_close_connection
Format string: event timer del: %d: %M
Concrete values: {'par_1': {'fmt': '%d', 'val': '8'}, 'par_2': {'fmt': '%M', 'val': '1215721384'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 reusable connection: 0
LEA instruction address: 0x2af23
Function: ngx_reusable_connection
Format string: reusable connection: %ui
Concrete values: {'par_1': {'fmt': '%ui', 'val': '0'}}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 free: 0000555555646570
LEA instruction address: 0x1b536
Function: ngx_destroy_pool
Format string: free: %p, unused: %uz
Concrete values: {}

Log: 2024/11/21 13:46:14 [debug] 687715#0: *1 free: 00005555556507A0, unused: 136
LEA instruction address: 0x1b536
Function: ngx_destroy_pool
Format string: free: %p, unused: %uz
Concrete values: {'par_1': {'fmt': '%p', 'val': '00005555556507A0'}, 'par_2': {'fmt': '%uz', 'val': '136'}}

Log: 2024/11/21 13:46:15 [debug] 687715#0: event timer del: 1432023124: 1215647384
LEA instruction address: 0x2b06c
Function: ngx_close_connection
Format string: event timer del: %d: %M
Concrete values: {'par_1': {'fmt': '%d', 'val': '1432023124'}, 'par_2': {'fmt': '%M', 'val': '1215647384'}}
